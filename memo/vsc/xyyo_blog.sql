-- -------------------------------------------------------------
-- TablePlus 2.10(268)
--
-- https://tableplus.com/
--
-- Database: xyyo_blog
-- Generation Time: 2020-03-29 10:53:35.7990
-- -------------------------------------------------------------


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;


DROP TABLE IF EXISTS `basic_info`;
CREATE TABLE `basic_info` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `nick_name` varchar(16) COLLATE utf8mb4_unicode_ci NOT NULL,
  `full_name` varchar(16) COLLATE utf8mb4_unicode_ci NOT NULL,
  `chinese_name` varchar(16) COLLATE utf8mb4_unicode_ci NOT NULL,
  `little_picture` varchar(64) COLLATE utf8mb4_unicode_ci NOT NULL,
  `big_picture` varchar(64) COLLATE utf8mb4_unicode_ci NOT NULL,
  `website` varchar(64) COLLATE utf8mb4_unicode_ci NOT NULL,
  `greet` varchar(32) COLLATE utf8mb4_unicode_ci NOT NULL,
  `introduction` text COLLATE utf8mb4_unicode_ci NOT NULL,
  `facebook` varchar(64) COLLATE utf8mb4_unicode_ci NOT NULL,
  `github` varchar(64) COLLATE utf8mb4_unicode_ci NOT NULL,
  `wechat` varchar(64) COLLATE utf8mb4_unicode_ci NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

DROP TABLE IF EXISTS `canvas_posts`;
CREATE TABLE `canvas_posts` (
  `id` char(36) COLLATE utf8mb4_unicode_ci NOT NULL,
  `slug` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `title` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `summary` text COLLATE utf8mb4_unicode_ci,
  `body` text COLLATE utf8mb4_unicode_ci,
  `published_at` datetime NOT NULL DEFAULT '2018-10-12 00:00:00',
  `featured_image` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `featured_image_caption` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `user_id` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `meta` json DEFAULT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL,
  `deleted_at` timestamp NULL DEFAULT NULL,
  `complete` tinyint(1) NOT NULL DEFAULT '0' COMMENT '0:not yet,1:finished',
  PRIMARY KEY (`id`),
  UNIQUE KEY `canvas_posts_slug_unique` (`slug`),
  KEY `canvas_posts_user_id_index` (`user_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

DROP TABLE IF EXISTS `canvas_posts_tags`;
CREATE TABLE `canvas_posts_tags` (
  `post_id` char(36) COLLATE utf8mb4_unicode_ci NOT NULL,
  `tag_id` char(36) COLLATE utf8mb4_unicode_ci NOT NULL,
  UNIQUE KEY `canvas_posts_tags_post_id_tag_id_unique` (`post_id`,`tag_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

DROP TABLE IF EXISTS `canvas_posts_topics`;
CREATE TABLE `canvas_posts_topics` (
  `post_id` char(36) COLLATE utf8mb4_unicode_ci NOT NULL,
  `topic_id` char(36) COLLATE utf8mb4_unicode_ci NOT NULL,
  UNIQUE KEY `canvas_posts_topics_post_id_topic_id_unique` (`post_id`,`topic_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

DROP TABLE IF EXISTS `canvas_tags`;
CREATE TABLE `canvas_tags` (
  `id` char(36) COLLATE utf8mb4_unicode_ci NOT NULL,
  `slug` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `name` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL,
  `deleted_at` timestamp NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `canvas_tags_slug_unique` (`slug`),
  KEY `canvas_tags_created_at_index` (`created_at`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

DROP TABLE IF EXISTS `canvas_topics`;
CREATE TABLE `canvas_topics` (
  `id` char(36) COLLATE utf8mb4_unicode_ci NOT NULL,
  `slug` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `name` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL,
  `deleted_at` timestamp NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `canvas_topics_slug_unique` (`slug`),
  KEY `canvas_topics_created_at_index` (`created_at`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

DROP TABLE IF EXISTS `canvas_views`;
CREATE TABLE `canvas_views` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `post_id` char(36) COLLATE utf8mb4_unicode_ci NOT NULL,
  `ip` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `agent` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `referer` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `post_id` (`post_id`),
  KEY `created_at` (`created_at`)
) ENGINE=InnoDB AUTO_INCREMENT=59 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

DROP TABLE IF EXISTS `failed_jobs`;
CREATE TABLE `failed_jobs` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `connection` text COLLATE utf8mb4_unicode_ci NOT NULL,
  `queue` text COLLATE utf8mb4_unicode_ci NOT NULL,
  `payload` longtext COLLATE utf8mb4_unicode_ci NOT NULL,
  `exception` longtext COLLATE utf8mb4_unicode_ci NOT NULL,
  `failed_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

DROP TABLE IF EXISTS `messages`;
CREATE TABLE `messages` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `email` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `message` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `deleted_at` timestamp NULL DEFAULT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=8 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

DROP TABLE IF EXISTS `migrations`;
CREATE TABLE `migrations` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `migration` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `batch` int(11) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

DROP TABLE IF EXISTS `password_resets`;
CREATE TABLE `password_resets` (
  `email` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `token` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  KEY `password_resets_email_index` (`email`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

DROP TABLE IF EXISTS `users`;
CREATE TABLE `users` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `email` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `email_verified_at` timestamp NULL DEFAULT NULL,
  `password` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `remember_token` varchar(100) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `users_email_unique` (`email`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO `basic_info` (`id`, `nick_name`, `full_name`, `chinese_name`, `little_picture`, `big_picture`, `website`, `greet`, `introduction`, `facebook`, `github`, `wechat`, `created_at`, `updated_at`) VALUES ('1', 'xyh', 'XING YAHAO', '邢 亜豪', '/images/self-round.png', '/images/self-squar-blur.png', 'xyyolab.com', 'Hey, there !', '<p>Speak Chinese, English, Japanese, living in Tokyo right now<span class=\"icon has-text-info\"><i class=\"fas fa-globe-asia\"></i>\n</span>.</p>\n\n<p>I built this <a href=\"https://www.xyyolab.com\">blog</a> to record something in life, maybe some learning notes, maybe some thoughts in the future.</p>\n\n<p>On the job, I specialize in backend programming <span class=\"icon has-text-primary\"><i class=\"fas fa-laptop-code\"></i>\n</span> with PHP and frameworks like Laravel, Symfony. Improving Vue.js, Flutter, Python these days !</p>\n\n<p>When I\'m not building things, I enjoy spending time travel <span class=\"icon has-text-link\"><i class=\"fas fa-plane-departure\"></i>\n</span> . I got this photo in Mirissa(South of Sri Lanka). Missing those days SO MUCH! </p>\n\n<p>If you have any idea, just use the contact form below, reach me directly<span class=\"icon has-text-danger\"><i class=\"far fa-smile-wink\"></i>\n</span>!</p>\n\n<p class=\"center\"><a href=\"https://github.com/xyyolab/Blog\">Source code of this blog</a></p>', 'https://www.facebook.com/people/Xing-Yahao/100010633425743', 'https://github.com/xyyolab', 'WeChat ID: hellomonkey9', '2019-10-19 17:50:04', '2019-10-19 17:50:04');

INSERT INTO `canvas_posts` (`id`, `slug`, `title`, `summary`, `body`, `published_at`, `featured_image`, `featured_image_caption`, `user_id`, `meta`, `created_at`, `updated_at`, `deleted_at`, `complete`) VALUES ('0c6397ca-5925-4c2f-bb38-1af935e5532d', 'my-command-line-note', 'the road to becoming a command  line hero', 'just my command line note :)', '<p><br></p><h2><code style=\"color: rgb(85, 85, 85);\">bpcopy</code></h2><pre class=\"ql-syntax\" spellcheck=\"false\">cat ~<span class=\"hljs-regexp\">/.ssh/i</span>d_rsa.pub | pbcopy\r\npbcopy &lt; ~<span class=\"hljs-regexp\">/.ssh/i</span>d_rsa.pub\r\n</pre><p><br></p>', '2020-02-10 11:12:00', 'https://images.unsplash.com/photo-1524741978410-350ba91a70d7?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjk2NDE2fQ', 'Photo by <a href=\"https://unsplash.com/@hannahjoshua\" target=\"_blank\">Hannah Joshua</a> on <a href=\"https://unsplash.com\" target=\"_blank\">Unsplash</a>', '1', '{\"og_title\": null, \"twitter_title\": null, \"canonical_link\": null, \"og_description\": null, \"meta_description\": null, \"twitter_description\": null}', '2020-02-10 11:19:13', '2020-02-10 11:19:13', NULL, '0'),
('19e26887-e7ed-488a-b160-799e88e1691f', 'laravel-create-fake-data-seeder-with-relationships', 'Laravel: Create fake data seeder with relationships', 'Create some fake data with factory and seeder is normal. Here is the method to create fake data with relationships.', '<p><br></p><h2><strong>An example for Post Topics and Tags</strong></h2><p><br></p><p><span style=\"color: rgb(34, 34, 34);\">Basically, we’re creating 10 posts, and for each of them we’re creating one tag and one topic, using Eloquent relationship in&nbsp;</span><strong style=\"color: rgb(34, 34, 34);\">app/Post.php</strong><span style=\"color: rgb(34, 34, 34);\">:</span></p><p><br></p><pre class=\"ql-syntax\" spellcheck=\"false\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">tags</span><span class=\"hljs-params\">()</span>\r\n</span>{\r\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">$this</span>-&gt;hasMany(Tag::class, <span class=\"hljs-string\">\'post_id\'</span>);\r\n}\r\n\r\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">topics</span><span class=\"hljs-params\">()</span>\r\n</span>{\r\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">$this</span>-&gt;hasMany(Topic::class, <span class=\"hljs-string\">\'post_id\'</span>);\r\n}\r\n</pre><p><br></p><p>Firstly, create factory normally like </p><p><br></p><pre class=\"ql-syntax\" spellcheck=\"false\"><span class=\"hljs-comment\">//database/factories/PostFactory.php</span>\r\n<span class=\"hljs-meta\">&lt;?php</span>\r\n\r\n<span class=\"hljs-comment\">/** <span class=\"hljs-doctag\">@var</span> \\Illuminate\\Database\\Eloquent\\Factory $factory */</span>\r\n\r\n<span class=\"hljs-keyword\">use</span> <span class=\"hljs-title\">App</span>\\<span class=\"hljs-title\">Post</span>;\r\n<span class=\"hljs-keyword\">use</span> <span class=\"hljs-title\">Faker</span>\\<span class=\"hljs-title\">Generator</span> <span class=\"hljs-title\">as</span> <span class=\"hljs-title\">Faker</span>;\r\n\r\n$factory-&gt;define(Post::class, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-params\">(Faker $faker)</span> </span>{\r\n    <span class=\"hljs-keyword\">return</span> [\r\n        <span class=\"hljs-string\">\'id\'</span> =&gt; md5($faker-&gt;word),\r\n        <span class=\"hljs-string\">\'slug\'</span>=&gt; $faker-&gt;slug,\r\n        <span class=\"hljs-string\">\'title\'</span> =&gt; $faker-&gt;sentence,\r\n        <span class=\"hljs-string\">\'summary\'</span> =&gt; $faker-&gt;sentence,\r\n        <span class=\"hljs-string\">\'body\'</span> =&gt; $faker-&gt;paragraph,\r\n        <span class=\"hljs-string\">\'featured_image\'</span> =&gt; $faker-&gt;imageUrl,\r\n        <span class=\"hljs-string\">\'featured_image_caption\'</span> =&gt; <span class=\"hljs-string\">\'Photo by\'</span>.$faker-&gt;imageUrl,\r\n        <span class=\"hljs-string\">\'user_id\'</span> =&gt; <span class=\"hljs-number\">1</span>,\r\n        <span class=\"hljs-string\">\'meta\'</span> =&gt; $faker-&gt;sentence,\r\n        <span class=\"hljs-string\">\'complete\'</span> =&gt; <span class=\"hljs-number\">1</span>\r\n    ];\r\n});\r\n</pre><p><br></p><p>also  <span style=\"color: rgb(34, 34, 34);\">similarly</span> create <code>TopicFactory</code> and <code>TagFactory</code></p><p><br></p><pre class=\"ql-syntax\" spellcheck=\"false\"><span class=\"hljs-comment\">//database/seeds/PostsTableSeeder.php</span>\r\n<span class=\"hljs-meta\">&lt;?php</span>\r\n\r\n<span class=\"hljs-keyword\">use</span> <span class=\"hljs-title\">Illuminate</span>\\<span class=\"hljs-title\">Database</span>\\<span class=\"hljs-title\">Seeder</span>;\r\n<span class=\"hljs-keyword\">use</span> <span class=\"hljs-title\">App</span>\\<span class=\"hljs-title\">Post</span>;\r\n<span class=\"hljs-keyword\">use</span> <span class=\"hljs-title\">App</span>\\<span class=\"hljs-title\">Topic</span>;\r\n<span class=\"hljs-keyword\">use</span> <span class=\"hljs-title\">App</span>\\<span class=\"hljs-title\">Tag</span>;\r\n\r\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">PostsTableSeeder</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Seeder</span>\r\n</span>{\r\n    <span class=\"hljs-comment\">/**\r\n     * Run the database seeds.\r\n     *\r\n     * <span class=\"hljs-doctag\">@return</span> void\r\n     */</span>\r\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">run</span><span class=\"hljs-params\">()</span>\r\n    </span>{\r\n        factory(Post::class, <span class=\"hljs-number\">5</span>)-&gt;create()\r\n        -&gt;each(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-params\">($post)</span> </span>{\r\n            $post-&gt;tags()-&gt;save(factory(Tag::class)-&gt;make());\r\n        })\r\n        -&gt;each(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-params\">($post)</span> </span>{\r\n            $post-&gt;topic()-&gt;save(factory(Topic::class)-&gt;make());\r\n        });\r\n    }\r\n}\r\n</pre><p><br></p>', '2019-11-11 13:34:00', 'https://images.unsplash.com/photo-1551288049-bebda4e38f71?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjk2NDE2fQ', 'Photo by <a href=\"https://unsplash.com/@lukechesser\" target=\"_blank\">Luke Chesser</a> on <a href=\"https://unsplash.com\" target=\"_blank\">Unsplash</a>', '1', '{\"og_title\": null, \"twitter_title\": null, \"canonical_link\": null, \"og_description\": null, \"meta_description\": null, \"twitter_description\": null}', '2019-11-11 13:50:56', '2019-12-01 13:44:57', NULL, '1'),
('23fbc33b-27b6-487e-96e4-c715a109f483', 'javascript-async-await-promise', 'javascript learning note (callback, async and continuously updating )', 'This is the first post of a series javascript learning note. Some basic about async-await promise.', '<p><br></p><h2><strong>some basic functionalities</strong></h2><p><br></p><p><code>setTimeout</code> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span></span></p><pre class=\"ql-syntax\" spellcheck=\"false\">setTimeout(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>()</span>{ alert(<span class=\"hljs-string\">\"Hello\"</span>); },&nbsp;<span class=\"hljs-number\">3000</span>);\r\n</pre><p><br></p><p><span class=\"hljs-keyword\">or elegant array function (😳) ⇒ 😉</span></p><pre class=\"ql-syntax\" spellcheck=\"false\">setTimeout(<span class=\"hljs-function\"><span class=\"hljs-params\">()</span>=&gt;</span>alert(<span class=\"hljs-string\">\"Hello\"</span>), <span class=\"hljs-number\">3000</span>);\r\n</pre><p><br></p><p><code class=\"hljs-keyword\">for</code> <span class=\"hljs-keyword\">loop</span> <span class=\"hljs-keyword\">and</span> <code>forEach</code> loop</p><pre class=\"ql-syntax\" spellcheck=\"false\"><span class=\"hljs-keyword\">for</span>&nbsp;(<span class=\"hljs-keyword\">let</span>&nbsp;post&nbsp;<span class=\"hljs-keyword\">in</span>&nbsp;posts)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;output&nbsp;+=&nbsp;<span class=\"hljs-string\">`&lt;li&gt;<span class=\"hljs-subst\">${posts[post].title}</span>&lt;/li&gt;`</span>\r\n}\r\nposts.forEach(<span class=\"hljs-function\">(<span class=\"hljs-params\">post</span>)&nbsp;=&gt;</span>&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;output&nbsp;+=&nbsp;<span class=\"hljs-string\">`&lt;li&gt;<span class=\"hljs-subst\">${post.title}</span>&lt;/li&gt;`</span>\r\n});\r\n\r\n</pre><h3><strong>Here is an example !</strong></h3><p><span class=\"hljs-title\">Without callback, createPost</span><span style=\"color: rgba(0, 0, 0, 0.9);\">() </span><span class=\"hljs-title\">has</span><span style=\"color: rgba(0, 0, 0, 0.9);\"> </span><span class=\"hljs-title\">a</span><span style=\"color: rgba(0, 0, 0, 0.9);\"> </span><span class=\"hljs-title\">longer</span><span style=\"color: rgba(0, 0, 0, 0.9);\"> </span><span class=\"hljs-title\">time</span><span style=\"color: rgba(0, 0, 0, 0.9);\"> </span><span class=\"hljs-title\">than</span><span style=\"color: rgba(0, 0, 0, 0.9);\"> </span><span class=\"hljs-title\">getPosts</span><span style=\"color: rgba(0, 0, 0, 0.9);\">(), so </span><span class=\"hljs-title\">there</span><span style=\"color: rgba(0, 0, 0, 0.9);\"> </span><span class=\"hljs-title\">will</span><span style=\"color: rgba(0, 0, 0, 0.9);\"> </span><span class=\"hljs-title\">only</span><span style=\"color: rgba(0, 0, 0, 0.9);\"> </span><span class=\"hljs-title\">be</span><span style=\"color: rgba(0, 0, 0, 0.9);\"> </span><span class=\"hljs-title\">Post</span><span style=\"color: rgba(0, 0, 0, 0.9);\"> </span><span class=\"hljs-title\">one</span><span style=\"color: rgba(0, 0, 0, 0.9);\"> </span><span class=\"hljs-title\">and</span><span style=\"color: rgba(0, 0, 0, 0.9);\"> </span><span class=\"hljs-title\">Post</span><span style=\"color: rgba(0, 0, 0, 0.9);\"> </span><span class=\"hljs-title\">two</span><span style=\"color: rgba(0, 0, 0, 0.9);\"> </span><span class=\"hljs-title\">on</span><span style=\"color: rgba(0, 0, 0, 0.9);\"> </span><span class=\"hljs-title\">DOM</span><span style=\"color: rgba(0, 0, 0, 0.9);\">. </span></p><p><span style=\"color: rgba(0, 0, 0, 0.9);\">But there are callbacks, we will get 3 posts.</span></p><pre class=\"ql-syntax\" spellcheck=\"false\"><span class=\"hljs-keyword\">const</span>&nbsp;posts&nbsp;=&nbsp;[\r\n&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;<span class=\"hljs-attr\">title</span>:&nbsp;<span class=\"hljs-string\">\'Post&nbsp;one\'</span>,&nbsp;<span class=\"hljs-attr\">body</span>:&nbsp;<span class=\"hljs-string\">\'This&nbsp;is&nbsp;post&nbsp;one\'</span>&nbsp;},\r\n&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;<span class=\"hljs-attr\">title</span>:&nbsp;<span class=\"hljs-string\">\'Post&nbsp;two\'</span>,&nbsp;<span class=\"hljs-attr\">body</span>:&nbsp;<span class=\"hljs-string\">\'This&nbsp;is&nbsp;post&nbsp;two\'</span>&nbsp;}\r\n];\r\n\r\n\r\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>&nbsp;<span class=\"hljs-title\">getPosts</span>()&nbsp;</span>{\r\n&nbsp;&nbsp;&nbsp;&nbsp;setTimeout(<span class=\"hljs-function\"><span class=\"hljs-params\">()</span>&nbsp;=&gt;</span>&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-keyword\">let</span>&nbsp;output&nbsp;=&nbsp;<span class=\"hljs-string\">\'\'</span>;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;posts.forEach(<span class=\"hljs-function\">(<span class=\"hljs-params\">post</span>)&nbsp;=&gt;</span>&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;output&nbsp;+=&nbsp;<span class=\"hljs-string\">`&lt;li&gt;<span class=\"hljs-subst\">${post.title}</span>&lt;/li&gt;`</span>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-built_in\">document</span>.body.innerHTML&nbsp;=&nbsp;output;\r\n&nbsp;&nbsp;&nbsp;&nbsp;},&nbsp;<span class=\"hljs-number\">1000</span>);\r\n}\r\n\r\n\r\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>&nbsp;<span class=\"hljs-title\">createPost</span>(<span class=\"hljs-params\">post,&nbsp;callback</span>)&nbsp;</span>{\r\n&nbsp;&nbsp;&nbsp;&nbsp;setTimeout(<span class=\"hljs-function\"><span class=\"hljs-params\">()</span>&nbsp;=&gt;</span>&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;posts.push(post);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;callback();\r\n&nbsp;&nbsp;&nbsp;&nbsp;},&nbsp;<span class=\"hljs-number\">2000</span>);\r\n}\r\n\r\n\r\ngetPosts();\r\n\r\n\r\ncreatePost({&nbsp;<span class=\"hljs-attr\">title</span>:&nbsp;<span class=\"hljs-string\">\'Post&nbsp;threee\'</span>,&nbsp;<span class=\"hljs-attr\">body</span>:&nbsp;<span class=\"hljs-string\">\'This&nbsp;is&nbsp;post&nbsp;three\'</span>&nbsp;},&nbsp;getPosts);\r\n\r\n</pre><p><br></p><h2><br></h2><h2><strong>Promise</strong></h2><h3>create and use  promise to solve this problem like below.</h3><pre class=\"ql-syntax\" spellcheck=\"false\">function&nbsp;createPost(post)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-keyword\">return</span>&nbsp;<span class=\"hljs-keyword\">new</span>&nbsp;Promise(<span class=\"hljs-function\"><span class=\"hljs-params\">(resolve,&nbsp;reject)</span>&nbsp;=&gt;</span>&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setTimeout(<span class=\"hljs-function\"><span class=\"hljs-params\">()</span>&nbsp;=&gt;</span>&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;posts.push(post);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},&nbsp;<span class=\"hljs-number\">2000</span>);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;error&nbsp;=&nbsp;<span class=\"hljs-literal\">false</span>;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-keyword\">if</span>&nbsp;(!error)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;resolve();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<span class=\"hljs-keyword\">else</span>&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reject(<span class=\"hljs-string\">\'Error!\'</span>);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;});\r\n}\r\n\r\ncreatePost({&nbsp;title:&nbsp;<span class=\"hljs-string\">\'post&nbsp;three\'</span>,&nbsp;body:&nbsp;<span class=\"hljs-string\">\'this&nbsp;is&nbsp;post&nbsp;three\'</span>&nbsp;})\r\n&nbsp;&nbsp;&nbsp;&nbsp;.<span class=\"hljs-keyword\">then</span>(getPosts)\r\n&nbsp;&nbsp;&nbsp;&nbsp;.<span class=\"hljs-keyword\">catch</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">(error)</span>&nbsp;=&gt;</span>&nbsp;<span class=\"hljs-built_in\">console</span>.log(error));\r\n\r\n</pre><h1>another way to accept a promise( <strong>fetch api</strong> )</h1><p><br></p><div class=\"inline_html\" contenteditable=\"false\"></div><pre class=\"ql-syntax\" spellcheck=\"false\">fetch(<span class=\"hljs-string\">\'https://jsonplaceholder.typicode.com/users\'</span>)\r\n&nbsp;&nbsp;&nbsp;&nbsp;.<span class=\"hljs-keyword\">then</span>(res&nbsp;=&gt;&nbsp;res.json())\r\n&nbsp;&nbsp;&nbsp;&nbsp;.<span class=\"hljs-keyword\">then</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">(data)</span>&nbsp;=&gt;</span>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data.forEach(<span class=\"hljs-function\"><span class=\"hljs-params\">(user)</span>&nbsp;=&gt;</span>&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-built_in\">console</span>.log(user.name);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;})\r\n&nbsp;&nbsp;&nbsp;&nbsp;);\r\n</pre><p><br></p><h2><strong>async await</strong></h2><pre class=\"ql-syntax\" spellcheck=\"false\"><span class=\"hljs-keyword\">async</span>&nbsp;<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>&nbsp;<span class=\"hljs-title\">init</span>()&nbsp;</span>{\r\n&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-keyword\">await</span>&nbsp;createPost({\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-attr\">title</span>:&nbsp;<span class=\"hljs-string\">\'Post&nbsp;three\'</span>,\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-attr\">body</span>:&nbsp;<span class=\"hljs-string\">\'this&nbsp;is&nbsp;post&nbsp;three\'</span>\r\n&nbsp;&nbsp;&nbsp;&nbsp;})\r\n}\r\n</pre><p><br></p><h2>A better way with (Object) to find equal</h2><div class=\"embedded_image\" contenteditable=\"false\" data-layout=\"default\"><img alt=\"\" src=\"/storage/canvas/images/ybO867UXayz7SfIwRQKeWX0Q1flfVZ9rpZhN6930.jpeg\"></div><p><br></p>', '2019-11-03 16:53:00', 'https://images.unsplash.com/photo-1569341493086-cc9b8cf9c1e0?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjk2NDE2fQ', 'Photo by <a href=\"https://unsplash.com/@esterrestrial\" target=\"_blank\">Ester Marie Doysabas</a> on <a href=\"https://unsplash.com\" target=\"_blank\">Unsplash</a>', '1', '{\"og_title\": null, \"twitter_title\": null, \"canonical_link\": null, \"og_description\": null, \"meta_description\": null, \"twitter_description\": null}', '2019-11-03 17:45:28', '2019-12-29 17:22:10', NULL, '1'),
('26f81b5e-7631-48f2-b96f-b3ad45d2828f', 'main-css-reprocessor-comparison', '主流のCSSプリプロセッサ→Sass, Less, Stylusの比較', 'a comparison in 3 main CSS reprocessor Sass LESS Stylus (a Japanese translation)', '<h2><br></h2><h2><strong>CSSプリプロセッサーとは</strong></h2><p>独自の言語(変量・ネストなど利用できる言語)で書かれたスタイル構文をCSS構文へと変換してくれるツール。</p><p>例：<a href=\"https://sass-lang.com/\" target=\"_blank\" style=\"color: rgb(98, 0, 172);\">Sass</a>、<a href=\"http://lesscss.org/\" target=\"_blank\" style=\"color: rgb(98, 0, 172);\">Less</a>、<a href=\"https://qiita.com/xyh/items/stylus-lang.com\" target=\"_blank\" style=\"color: rgb(98, 0, 172);\">Stylus</a></p><p><br></p><h2><strong>主な記法 Basic</strong></h2><p>SassLessStylus拡張子.sass/.scss.less.styl/.stylus</p><ul><li>Sassは拡張子は.sassと.scssがあって、主な記法も分かれている。</li><li>.scssと.lessは標準CSSの記法でも構わない。</li></ul><pre class=\"ql-syntax\" spellcheck=\"false\"><span class=\"hljs-comment\">/* style.scss or style.less */</span>\r\nh1 {\r\n  <span class=\"hljs-attribute\">color</span>: <span class=\"hljs-number\">#0982C1</span>;\r\n}\r\n</pre><p>Sassは波括弧{}や行末セミコロン;を省略しないといけない。</p><p><br></p><pre class=\"ql-syntax\" spellcheck=\"false\"><span class=\"hljs-comment\">/* style.sass */</span>\r\nh1\r\n  color: <span class=\"hljs-meta\">#0982c1</span>\r\n</pre><p>Stylusの文法は多様で、波括弧{}や行末セミコロン;やコロン:全部省略することもできて、何も省略しないこともできる</p><p><br></p><pre class=\"ql-syntax\" spellcheck=\"false\"><span class=\"hljs-comment\">/* style.styl */</span>\r\nh1 {\r\n  <span class=\"hljs-attribute\">color</span>: <span class=\"hljs-number\">#0982C1</span>;\r\n}\r\n\r\n<span class=\"hljs-comment\">/* omit brackets */</span>\r\nh1\r\n  color: #0982C1;\r\n\r\n<span class=\"hljs-comment\">/* omit colons and semi-colons */</span>\r\nh1\r\n  color #0982C1\r\n</pre><p>同じ.stylの中、違う記法でもエラーではない</p><p><br></p><pre class=\"ql-syntax\" spellcheck=\"false\"><span class=\"hljs-section\">h1</span> {\r\n  <span class=\"hljs-attribute\">color</span> <span class=\"hljs-comment\">#0982c1</span>\r\n}\r\nh2\r\n  font-size: <span class=\"hljs-number\">1</span>.2em\r\n</pre><h2><strong>変数　Variables</strong></h2><p>Sassの変数は必ず$(PHPと同じ)</p><p>以下は特に強調しなければSassは.scssの記法にする 👻</p><pre class=\"ql-syntax\" spellcheck=\"false\"><span class=\"hljs-variable\">$mainColor</span>: <span class=\"hljs-comment\">#0982c1;</span>\r\n<span class=\"hljs-variable\">$siteWidth</span>: 1024px;\r\n<span class=\"hljs-variable\">$borderStyle</span>: dotted;\r\n\r\nbody {\r\n  color: <span class=\"hljs-variable\">$mainColor</span>;\r\n  border: 1px <span class=\"hljs-variable\">$borderStyle</span> <span class=\"hljs-variable\">$mainColor</span>;\r\n  max-width: <span class=\"hljs-variable\">$siteWidth</span>;\r\n}\r\n</pre><p>Lessの変数は@から始まる</p><p><br></p><pre class=\"ql-syntax\" spellcheck=\"false\">@mainColor: <span class=\"hljs-comment\">#0982c1;</span>\r\n@siteWidth: <span class=\"hljs-number\">1024</span>px;\r\n@borderStyle: dotted;\r\n\r\nbody {\r\n  color: @mainColor;\r\n  border: <span class=\"hljs-number\">1</span>px @borderStyle @mainColor;\r\n  max-width: @siteWidth;\r\n}\r\n</pre><p>Stylusの変数は符号なし(Pythonと同じ)</p><p><br></p><pre class=\"ql-syntax\" spellcheck=\"false\">mainColor = <span class=\"hljs-comment\">#0982c1</span>\r\nsiteWidth = 1024px\r\n$borderStyle = dotted\r\n\r\nbody\r\n  color mainColor\r\n  border 1px $borderStyle mainColor\r\n  max-width siteWidth\r\n</pre><p>以上の三つの書き方は、同じCSSへコンパイル！</p><p><br></p><pre class=\"ql-syntax\" spellcheck=\"false\">body {\r\n  <span class=\"hljs-attribute\">color</span>: <span class=\"hljs-number\">#0982c1</span>;\r\n  <span class=\"hljs-attribute\">border</span>: <span class=\"hljs-number\">1px</span> dotted <span class=\"hljs-number\">#0982c1</span>;\r\n  <span class=\"hljs-attribute\">max-width</span>: <span class=\"hljs-number\">1024px</span>;\r\n}\r\n</pre><p>他のプログランミング言語のように、変数を利用できるのはCSSプリプロセッサーの一位の便利性だと思う。</p><p>色など多用する値であれば便利！</p><p><br></p><h2><strong>ネスト Nesting</strong></h2><pre class=\"ql-syntax\" spellcheck=\"false\">section {\r\n  <span class=\"hljs-attribute\">margin</span>: <span class=\"hljs-number\">10px</span>;\r\n}\r\nsection nav {\r\n  <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">25px</span>;\r\n}\r\nsection nav a {\r\n  <span class=\"hljs-attribute\">color</span>: <span class=\"hljs-number\">#0982C1</span>;\r\n}\r\nsection nav a:hover {\r\n  <span class=\"hljs-attribute\">text-decoration</span>: underline;\r\n}\r\n</pre><p>何回もコピペ(T . T)</p><p>CSSプリプロセッサ使えば</p><pre class=\"ql-syntax\" spellcheck=\"false\"><span class=\"hljs-attr\">section</span> <span class=\"hljs-string\">{</span>\r\n  <span class=\"hljs-attr\">margin</span>: <span class=\"hljs-string\">10px;</span>\r\n\r\n  <span class=\"hljs-attr\">nav</span> <span class=\"hljs-string\">{</span>\r\n    <span class=\"hljs-attr\">height</span>: <span class=\"hljs-string\">25px;</span>\r\n\r\n    <span class=\"hljs-attr\">a</span> <span class=\"hljs-string\">{</span>\r\n      <span class=\"hljs-attr\">color</span>: <span class=\"hljs-string\">#0982C1;</span>\r\n\r\n      <span class=\"hljs-meta\">&amp;amp;</span>:<span class=\"hljs-string\">hover {</span>\r\n        <span class=\"hljs-meta\">text-decoration</span>: <span class=\"hljs-string\">underline;</span>\r\n      <span class=\"hljs-attr\">}</span>\r\n    <span class=\"hljs-attr\">}</span>\r\n  <span class=\"hljs-attr\">}</span>\r\n<span class=\"hljs-attr\">}</span>\r\n</pre><p>ネストの関係が一目瞭然 😼</p><p><br></p><h2><strong>mixin</strong></h2><p>Mixinに詳しくない方は、関数と理解すれば、わかりやすいと思う！</p><p>Sassの例</p><pre class=\"ql-syntax\" spellcheck=\"false\"><span class=\"hljs-comment\">/* Sass mixin error with (optional) argument $borderWidth which defaults to 2px if not specified */</span>\r\n@mixin error($borderWidth: <span class=\"hljs-number\">2</span>px) {\r\n  border: $borderWidth solid <span class=\"hljs-comment\">#F00;</span>\r\n  color: <span class=\"hljs-comment\">#F00;</span>\r\n}\r\n\r\n.generic-error {\r\n  padding: <span class=\"hljs-number\">20</span>px;\r\n  margin: <span class=\"hljs-number\">4</span>px;\r\n  @ <span class=\"hljs-keyword\">include</span> error(); <span class=\"hljs-comment\">/* Applies styles from mixin error */</span>\r\n}\r\n.login-error {\r\n  left: <span class=\"hljs-number\">12</span>px;\r\n  position: absolute;\r\n  top: <span class=\"hljs-number\">20</span>px;\r\n  @ <span class=\"hljs-keyword\">include</span> error(<span class=\"hljs-number\">5</span>px); <span class=\"hljs-comment\">/* Applies styles from mixin error with argument $borderWidth equal to 5px*/</span>\r\n}\r\n</pre><p>Lessの例</p><p><br></p><pre class=\"ql-syntax\" spellcheck=\"false\">/* LESS mixin error <span class=\"hljs-keyword\">with</span> (optional) argument @borderWidth which defaults to <span class=\"hljs-number\">2</span>px <span class=\"hljs-keyword\">if</span> <span class=\"hljs-keyword\">not</span> specified */\r\n.error(@borderWidth: <span class=\"hljs-number\">2</span>px) {\r\n  border: @borderWidth solid <span class=\"hljs-comment\">#F00;</span>\r\n  color: <span class=\"hljs-comment\">#F00;</span>\r\n}\r\n\r\n.generic-error {\r\n  padding: <span class=\"hljs-number\">20</span>px;\r\n  margin: <span class=\"hljs-number\">4</span>px;\r\n  .error(); /* Applies styles <span class=\"hljs-keyword\">from</span> mixin error */\r\n}\r\n.login-error {\r\n  left: <span class=\"hljs-number\">12</span>px;\r\n  position: absolute;\r\n  top: <span class=\"hljs-number\">20</span>px;\r\n  .error(<span class=\"hljs-number\">5</span>px); /* Applies styles <span class=\"hljs-keyword\">from</span> mixin error <span class=\"hljs-keyword\">with</span> argument @borderWidth equal to <span class=\"hljs-number\">5</span>px */\r\n}\r\n</pre><p>Stylusの例</p><p><br></p><pre class=\"ql-syntax\" spellcheck=\"false\">/* Stylus mixin error <span class=\"hljs-keyword\">with</span> (optional) argument borderWidth which defaults to <span class=\"hljs-number\">2</span>px <span class=\"hljs-keyword\">if</span> <span class=\"hljs-keyword\">not</span> specified */\r\nerror(borderWidth= <span class=\"hljs-number\">2</span>px) {\r\n  border: borderWidth solid <span class=\"hljs-comment\">#F00;</span>\r\n  color: <span class=\"hljs-comment\">#F00;</span>\r\n}\r\n\r\n.generic-error {\r\n  padding: <span class=\"hljs-number\">20</span>px;\r\n  margin: <span class=\"hljs-number\">4</span>px;\r\n  error(); /* Applies styles <span class=\"hljs-keyword\">from</span> mixin error */\r\n}\r\n.login-error {\r\n  left: <span class=\"hljs-number\">12</span>px;\r\n  position: absolute;\r\n  top: <span class=\"hljs-number\">20</span>px;\r\n  error(<span class=\"hljs-number\">5</span>px); /* Applies styles <span class=\"hljs-keyword\">from</span> mixin error <span class=\"hljs-keyword\">with</span> argument borderWidth equal to <span class=\"hljs-number\">5</span>px */\r\n}\r\n</pre><p>以上の三つのMixinの例は以下のCSSへコンパイル</p><p><br></p><pre class=\"ql-syntax\" spellcheck=\"false\">.generic-error {\r\n  <span class=\"hljs-attribute\">padding</span>: <span class=\"hljs-number\">20px</span>;\r\n  <span class=\"hljs-attribute\">margin</span>: <span class=\"hljs-number\">4px</span>;\r\n  <span class=\"hljs-attribute\">border</span>: <span class=\"hljs-number\">2px</span> solid <span class=\"hljs-number\">#f00</span>;\r\n  <span class=\"hljs-attribute\">color</span>: <span class=\"hljs-number\">#f00</span>;\r\n}\r\n.login-error {\r\n  <span class=\"hljs-attribute\">left</span>: <span class=\"hljs-number\">12px</span>;\r\n  <span class=\"hljs-attribute\">position</span>: absolute;\r\n  <span class=\"hljs-attribute\">top</span>: <span class=\"hljs-number\">20px</span>;\r\n  <span class=\"hljs-attribute\">border</span>: <span class=\"hljs-number\">5px</span> solid <span class=\"hljs-number\">#f00</span>;\r\n  <span class=\"hljs-attribute\">color</span>: <span class=\"hljs-number\">#f00</span>;\r\n}\r\n</pre><h2><strong>継承　Extend/Inheritance</strong></h2><p>多数のelementは同じstyleを適用する際、よくこうする</p><p><br></p><pre class=\"ql-syntax\" spellcheck=\"false\">p,\r\nul,\r\nol {\r\n  <span class=\"hljs-comment\">/* styles here */</span>\r\n}\r\n</pre><p>SassとStylusは</p><p><br></p><pre class=\"ql-syntax\" spellcheck=\"false\">.block {\r\n  <span class=\"hljs-symbol\">margin:</span> <span class=\"hljs-number\">10</span>px <span class=\"hljs-number\">5</span>px;\r\n  <span class=\"hljs-symbol\">padding:</span> <span class=\"hljs-number\">2</span>px;\r\n}\r\n\r\np {\r\n  @extend .block; <span class=\"hljs-regexp\">/* Inherit styles from \'.block\' */</span>\r\n  <span class=\"hljs-symbol\">border:</span> <span class=\"hljs-number\">1</span>px solid <span class=\"hljs-comment\">#EEE;</span>\r\n}\r\nul, ol {\r\n  @extend .block; <span class=\"hljs-regexp\">/* Inherit styles from \'.block\' */</span>\r\n  <span class=\"hljs-symbol\">color:</span> <span class=\"hljs-comment\">#333;</span>\r\n  text-<span class=\"hljs-symbol\">transform:</span> uppercase;\r\n}\r\n</pre><p>Lessは</p><p><br></p><pre class=\"ql-syntax\" spellcheck=\"false\">.block {\r\n  margin: <span class=\"hljs-number\">10</span>px <span class=\"hljs-number\">5</span>px;\r\n  padding: <span class=\"hljs-number\">2</span>px;\r\n}\r\n\r\np {\r\n  .block; /* Inherit styles <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\'.block\'</span> */\r\n  border: <span class=\"hljs-number\">1</span>px solid <span class=\"hljs-comment\">#EEE;</span>\r\n}\r\nul, ol {\r\n  .block; /* Inherit styles <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\'.block\'</span> */\r\n  color: <span class=\"hljs-comment\">#333;</span>\r\n  text-transform: uppercase;\r\n}\r\n</pre><p>どちらも以下のCSSへコンパイル</p><p><br></p><pre class=\"ql-syntax\" spellcheck=\"false\">.block {\r\n  <span class=\"hljs-attribute\">margin</span>: <span class=\"hljs-number\">10px</span> <span class=\"hljs-number\">5px</span>;\r\n  <span class=\"hljs-attribute\">padding</span>: <span class=\"hljs-number\">2px</span>;\r\n}\r\np {\r\n  <span class=\"hljs-attribute\">margin</span>: <span class=\"hljs-number\">10px</span> <span class=\"hljs-number\">5px</span>;\r\n  <span class=\"hljs-attribute\">padding</span>: <span class=\"hljs-number\">2px</span>;\r\n  <span class=\"hljs-attribute\">border</span>: <span class=\"hljs-number\">1px</span> solid <span class=\"hljs-number\">#EEE</span>;\r\n}\r\nul,\r\nol {\r\n  <span class=\"hljs-attribute\">margin</span>: <span class=\"hljs-number\">10px</span> <span class=\"hljs-number\">5px</span>;\r\n  <span class=\"hljs-attribute\">padding</span>: <span class=\"hljs-number\">2px</span>;\r\n  <span class=\"hljs-attribute\">color</span>: <span class=\"hljs-number\">#333</span>;\r\n  <span class=\"hljs-attribute\">text-transform</span>: uppercase;\r\n}\r\n</pre><h2><strong>オペレーター　Operators</strong></h2><p>Sassの例</p><p><br></p><pre class=\"ql-syntax\" spellcheck=\"false\">.container {\r\n  <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-number\">100%</span>;\r\n}\r\n\r\narticle[role=\"main\"] {\r\n  <span class=\"hljs-attribute\">float</span>: left;\r\n  <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-number\">600px</span> / <span class=\"hljs-number\">960px</span> * <span class=\"hljs-number\">100%</span>;\r\n}\r\n\r\naside[role=\"complementary\"] {\r\n  <span class=\"hljs-attribute\">float</span>: right;\r\n  <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-number\">300px</span> / <span class=\"hljs-number\">960px</span> * <span class=\"hljs-number\">100%</span>;\r\n}\r\n</pre><p>他も同じで、単純にオペレーターが使える</p><p>コンパイル後は:</p><pre class=\"ql-syntax\" spellcheck=\"false\">.container {\r\n  <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-number\">100%</span>;\r\n}\r\n\r\narticle[role=\"main\"] {\r\n  <span class=\"hljs-attribute\">float</span>: left;\r\n  <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-number\">62.5%</span>;\r\n}\r\n\r\naside[role=\"complementary\"] {\r\n  <span class=\"hljs-attribute\">float</span>: right;\r\n  <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-number\">31.25%</span>;\r\n}\r\n</pre><h2><strong>ブラウザの違いに関する</strong></h2><p>Sass</p><p><br></p><pre class=\"ql-syntax\" spellcheck=\"false\">@mixin border-radius($values) {\r\n  -webkit-border-<span class=\"hljs-symbol\">radius:</span> $values;\r\n     -moz-border-<span class=\"hljs-symbol\">radius:</span> $values;\r\n          border-<span class=\"hljs-symbol\">radius:</span> $values;\r\n}\r\n\r\ndiv {\r\n  @ <span class=\"hljs-keyword\">include</span> border-radius(<span class=\"hljs-number\">10</span>px);\r\n}\r\n</pre><p>Less</p><p><br></p><pre class=\"ql-syntax\" spellcheck=\"false\">.border-radius(@values) {\r\n  -webkit-border-radius: @values;\r\n     -moz-border-radius: @values;\r\n          border-radius: @values;\r\n}\r\n\r\ndiv {\r\n  .border-radius(<span class=\"hljs-number\">10</span>px);\r\n}\r\n</pre><p>Stylus</p><p><br></p><pre class=\"ql-syntax\" spellcheck=\"false\">border-radius(<span class=\"hljs-keyword\">values</span>) {\r\n  -webkit-border-radius: <span class=\"hljs-keyword\">values</span>;\r\n     -moz-border-radius: <span class=\"hljs-keyword\">values</span>;\r\n          border-radius: <span class=\"hljs-keyword\">values</span>;\r\n}\r\n\r\ndiv {\r\n  border-radius(<span class=\"hljs-number\">10</span>px);\r\n}\r\n\r\n</pre><p>コンパイル後</p><p><br></p><pre class=\"ql-syntax\" spellcheck=\"false\">div {\r\n  <span class=\"hljs-attribute\">-webkit-border-radius</span>: <span class=\"hljs-number\">10px</span>;\r\n     <span class=\"hljs-attribute\">-moz-border-radius</span>: <span class=\"hljs-number\">10px</span>;\r\n          <span class=\"hljs-attribute\">border-radius</span>: <span class=\"hljs-number\">10px</span>;\r\n}\r\n\r\n</pre><h2><strong>色の処理に関する関数　color functions</strong></h2><p>Sass:</p><p><br></p><pre class=\"ql-syntax\" spellcheck=\"false\">lighten($color, <span class=\"hljs-number\">10</span>%); <span class=\"hljs-comment\">/* returns a color 10% lighter than $color */</span>\r\ndarken($color, <span class=\"hljs-number\">10</span>%);  <span class=\"hljs-comment\">/* returns a color 10% darker than $color */</span>\r\n\r\nsaturate($color, <span class=\"hljs-number\">10</span>%);   <span class=\"hljs-comment\">/* returns a color 10% more saturated than $color */</span>\r\ndesaturate($color, <span class=\"hljs-number\">10</span>%); <span class=\"hljs-comment\">/* returns a color 10% less saturated than $color */</span>\r\n\r\ngrayscale($color);  <span class=\"hljs-comment\">/* returns grayscale of $color */</span>\r\ncomplement($color); <span class=\"hljs-comment\">/* returns complement color of $color */</span>\r\ninvert($color);     <span class=\"hljs-comment\">/* returns inverted color of $color */</span>\r\n\r\nmix($color1, $color2, <span class=\"hljs-number\">50</span>%); <span class=\"hljs-comment\">/* mix $color1 with $color2 with a weight of 50% */</span>\r\n</pre><p>以上は簡単な例として、取り上げたが、詳細は<a href=\"https://sass-lang.com/guide#example-6-scss\" target=\"_blank\" style=\"color: rgb(98, 0, 172);\">Sass Documentation</a>.</p><p><br></p><p>次はSassの実例</p><pre class=\"ql-syntax\" spellcheck=\"false\"><span class=\"hljs-variable\">$color</span>: <span class=\"hljs-comment\">#0982C1;</span>\r\n\r\nh1 {\r\n  background: <span class=\"hljs-variable\">$color</span>;\r\n  border: 3px solid darken(<span class=\"hljs-variable\">$color</span>, 50%);\r\n}\r\n</pre><p>Less:</p><p><br></p><pre class=\"ql-syntax\" spellcheck=\"false\">lighten(@<span class=\"hljs-keyword\">color</span>, <span class=\"hljs-number\">10%</span>); <span class=\"hljs-comment\">/* returns a color 10% lighter than @color */</span>\r\ndarken(@<span class=\"hljs-keyword\">color</span>, <span class=\"hljs-number\">10%</span>);  <span class=\"hljs-comment\">/* returns a color 10% darker than @color */</span>\r\n\r\nsaturate(@<span class=\"hljs-keyword\">color</span>, <span class=\"hljs-number\">10%</span>);   <span class=\"hljs-comment\">/* returns a color 10% more saturated than @color */</span>\r\ndesaturate(@<span class=\"hljs-keyword\">color</span>, <span class=\"hljs-number\">10%</span>); <span class=\"hljs-comment\">/* returns a color 10% less saturated than @color */</span>\r\n\r\nspin(@<span class=\"hljs-keyword\">color</span>, <span class=\"hljs-number\">10</span>);  <span class=\"hljs-comment\">/* returns a color with a 10 degree larger in hue than @color */</span>\r\nspin(@<span class=\"hljs-keyword\">color</span>, -<span class=\"hljs-number\">10</span>); <span class=\"hljs-comment\">/* returns a color with a 10 degree smaller hue than @color */</span>\r\n\r\nmix(@<span class=\"hljs-keyword\">color1</span>, @color2); <span class=\"hljs-comment\">/* return a mix of @color1 and @color2 */</span>\r\n</pre><p>詳しくは<a href=\"http://lesscss.org/#-color-functions\" target=\"_blank\" style=\"color: rgb(98, 0, 172);\">LESS Documentation</a>.</p><p><br></p><p>実例</p><pre class=\"ql-syntax\" spellcheck=\"false\">@color: <span class=\"hljs-comment\">#0982C1;</span>\r\n\r\nh1 {\r\n  background: @color;\r\n  border: <span class=\"hljs-number\">3</span>px solid darken(@color, <span class=\"hljs-number\">50</span>%);\r\n}\r\n</pre><p>Stylus:</p><p><br></p><pre class=\"ql-syntax\" spellcheck=\"false\">lighten(color, <span class=\"hljs-number\">10</span>%); <span class=\"hljs-comment\">/* returns a color 10% lighter than \'color\' */</span>\r\ndarken(color, <span class=\"hljs-number\">10</span>%);  <span class=\"hljs-comment\">/* returns a color 10% darker than \'color\' */</span>\r\n\r\nsaturate(color, <span class=\"hljs-number\">10</span>%);   <span class=\"hljs-comment\">/* returns a color 10% more saturated than \'color\' */</span>\r\ndesaturate(color, <span class=\"hljs-number\">10</span>%); <span class=\"hljs-comment\">/* returns a color 10% less saturated than \'color\' */</span>\r\n</pre><p>詳しくは<a href=\"http://stylus-lang.com/docs/bifs.html\" target=\"_blank\" style=\"color: rgb(98, 0, 172);\">Stylus Documentation</a>.</p><p><br></p><p>実例</p><pre class=\"ql-syntax\" spellcheck=\"false\">color = <span class=\"hljs-comment\">#0982C1</span>\r\n\r\nh1\r\n  background color\r\n  border 3px solid darken(color, 50%)\r\n</pre><h2><strong>運用の例ー&gt;3Dテキスト　3D Text</strong></h2><p>Sass:</p><p><br></p><pre class=\"ql-syntax\" spellcheck=\"false\">@mixin text3d($color) {\r\n  <span class=\"hljs-symbol\">color:</span> $color;\r\n  text-<span class=\"hljs-symbol\">shadow:</span> <span class=\"hljs-number\">1</span>px <span class=\"hljs-number\">1</span>px 0px darken($color, <span class=\"hljs-number\">5</span>%),\r\n               <span class=\"hljs-number\">2</span>px <span class=\"hljs-number\">2</span>px 0px darken($color, <span class=\"hljs-number\">10</span>%),\r\n               <span class=\"hljs-number\">3</span>px <span class=\"hljs-number\">3</span>px 0px darken($color, <span class=\"hljs-number\">15</span>%),\r\n               <span class=\"hljs-number\">4</span>px <span class=\"hljs-number\">4</span>px 0px darken($color, <span class=\"hljs-number\">20</span>%),\r\n               <span class=\"hljs-number\">4</span>px <span class=\"hljs-number\">4</span>px <span class=\"hljs-number\">2</span>px <span class=\"hljs-comment\">#000;</span>\r\n}\r\n\r\nh1 {\r\n  font-<span class=\"hljs-symbol\">size:</span> <span class=\"hljs-number\">32</span>pt;\r\n  @ <span class=\"hljs-keyword\">include</span> text3d(<span class=\"hljs-comment\">#0982c1);</span>\r\n}\r\n</pre><p>Less:</p><p><br></p><pre class=\"ql-syntax\" spellcheck=\"false\">.text3d(@color) {\r\n  color: @color;\r\n  text-shadow: <span class=\"hljs-number\">1</span>px <span class=\"hljs-number\">1</span>px <span class=\"hljs-number\">0</span>px darken(@color, <span class=\"hljs-number\">5</span>%),\r\n               <span class=\"hljs-number\">2</span>px <span class=\"hljs-number\">2</span>px <span class=\"hljs-number\">0</span>px darken(@color, <span class=\"hljs-number\">10</span>%),\r\n               <span class=\"hljs-number\">3</span>px <span class=\"hljs-number\">3</span>px <span class=\"hljs-number\">0</span>px darken(@color, <span class=\"hljs-number\">15</span>%),\r\n               <span class=\"hljs-number\">4</span>px <span class=\"hljs-number\">4</span>px <span class=\"hljs-number\">0</span>px darken(@color, <span class=\"hljs-number\">20</span>%),\r\n               <span class=\"hljs-number\">4</span>px <span class=\"hljs-number\">4</span>px <span class=\"hljs-number\">2</span>px <span class=\"hljs-comment\">#000;</span>\r\n}\r\n\r\nspan {\r\n  font-size: <span class=\"hljs-number\">32</span>pt;\r\n  .text3d(<span class=\"hljs-comment\">#0982c1);</span>\r\n}\r\n</pre><p>Stylus:</p><p><br></p><pre class=\"ql-syntax\" spellcheck=\"false\">text3d(color)\r\n  color: color\r\n  text-shadow: 1px 1px 0px darken(color, 5%), 2px 2px 0px darken(color, 10%), 3px 3px 0px darken(color, 15%), 4px 4px 0px darken(color, 20%), 4px 4px 2px <span class=\"hljs-comment\">#000</span>\r\nspan\r\n  font-size: 32pt\r\n  text3d(<span class=\"hljs-comment\">#0982c1)</span>\r\n</pre><p>Css:</p><p><br></p><pre class=\"ql-syntax\" spellcheck=\"false\">span {\r\n  <span class=\"hljs-attribute\">font-size</span>: <span class=\"hljs-number\">32pt</span>;\r\n  <span class=\"hljs-attribute\">color</span>: <span class=\"hljs-number\">#0982c1</span>;\r\n  <span class=\"hljs-attribute\">text-shadow</span>: <span class=\"hljs-number\">1px</span> <span class=\"hljs-number\">1px</span> <span class=\"hljs-number\">0px</span> <span class=\"hljs-number\">#097bb7</span>,\r\n               <span class=\"hljs-number\">2px</span> <span class=\"hljs-number\">2px</span> <span class=\"hljs-number\">0px</span> <span class=\"hljs-number\">#0875ae</span>,\r\n               <span class=\"hljs-number\">3px</span> <span class=\"hljs-number\">3px</span> <span class=\"hljs-number\">0px</span> <span class=\"hljs-number\">#086fa4</span>,\r\n               <span class=\"hljs-number\">4px</span> <span class=\"hljs-number\">4px</span> <span class=\"hljs-number\">0px</span> <span class=\"hljs-number\">#07689a</span>,\r\n               <span class=\"hljs-number\">4px</span> <span class=\"hljs-number\">4px</span> <span class=\"hljs-number\">2px</span> <span class=\"hljs-number\">#000</span>;\r\n}\r\n</pre><h2><strong>コメントアウト comments</strong></h2><p>三つのCSSプリプロセッサーもCSSと同様で</p><p>* 一行(e.g. //comment)</p><p>* 複数行(e.g. /* comment */)</p><p>対応している。</p><h2><strong>まとめ</strong></h2><p>以上の三つのCSSプリプロセッサー(Sass, LESS, Stylus)どちらも独自の記法で同じことを記述。</p><p><br></p><p>もし日常にプリプロセッサーを使わずにCSSを書いていたら、任意にピックアップして使ってみることがお勧めです。</p><p><a href=\"https://code.tutsplus.com/tutorials/sass-vs-less-vs-stylus-preprocessor-shootout--net-24320\" target=\"_blank\" style=\"color: rgb(98, 0, 172);\">英語の原文</a></p><h2><strong>最後に</strong></h2><p>CSSプリプロセッサー使用歴がなければ、最初はScssがCSSと全く同じく書けるので、入門に使ってみてもいいかもしれない。だんだん慣れた後、SassかStylusに移行もありでしょう。</p><p>最近Vue.jsの.vueファイルにCss書いてるので、どちらも非常に便利！</p><pre class=\"ql-syntax\" spellcheck=\"false\">&lt;style lang=\"scss\" scoped&gt;\r\n/* example */\r\n&lt;/style&gt;\r\n&lt;style lang=\"sass\" scoped&gt;\r\n/* example */\r\n&lt;/style&gt;\r\n&lt;style lang=\"less\" scoped&gt;\r\n/* example */\r\n&lt;/style&gt;\r\n&lt;style lang=\"stylus\" scoped&gt;\r\n/* example */\r\n&lt;/style&gt;\r\n</pre><p><br></p><p>本文はあくまでも何年前の英文の翻訳なので、記述が間違ったとか、日本語がおかしいとか、指摘していただくと幸い。</p>', '2019-12-15 23:22:00', 'https://images.unsplash.com/photo-1507721999472-8ed4421c4af2?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjk2NDE2fQ', 'Photo by <a href=\"https://unsplash.com/@kobuagency\" target=\"_blank\">Kobu Agency</a> on <a href=\"https://unsplash.com\" target=\"_blank\">Unsplash</a>', '1', '{\"og_title\": null, \"twitter_title\": null, \"canonical_link\": null, \"og_description\": null, \"meta_description\": null, \"twitter_description\": null}', '2019-12-15 23:24:51', '2019-12-15 23:42:22', NULL, '1'),
('2a55169a-8c41-4ffb-9ea7-7fb681581430', 'explain-of-macroable-and-how-to-use', 'Understand Laravel Core Concepts 4 (how to Macroable everything)', 'this is a Laravel base source that explains series. \'use Macroable\' is everywhere in laravel source here is the explanation.', '<h2><strong>Basic Usage of Macro</strong></h2><p>Usually macro is used to expand the functionality of Laravel build-in class, such as collection like below.</p><p>There are plenty of methods in collection class&nbsp;<code style=\"color: rgb(85, 85, 85);\">first()</code>,&nbsp;<code style=\"color: rgb(85, 85, 85);\">last()</code>&nbsp;etc, but no&nbsp;<code style=\"color: rgb(85, 85, 85);\">second()</code>. Let\'s create one!</p><pre class=\"ql-syntax\" spellcheck=\"false\">use Illuminate\\Support\\Collection;\r\n\r\nCollection::macro(\'second\', function () {\r\n    return $this-&gt;items[1];\r\n});\r\n\r\nRoute::get(\'/\', function () {\r\n    dd(collect([1,2,3])-&gt;second());\r\n}); \r\n</pre><h2><strong>Create Marcoable Trait ourself</strong></h2><pre class=\"ql-syntax\" spellcheck=\"false\">trait Maroable {\r\n\r\n    protected static $marco = [];\r\n\r\n    public static function ($name, $macro)\r\n    {\r\n        static::$macro[$name] = $macro;\r\n    }\r\n    \r\n    //a php [magic method](https://www.php.net/manual/en/language.oop5.magic.php)\r\n    //when a method not exist be called, this \'__call()\' will be called\r\n    public function __call($method, $parameters)\r\n    {\r\n        if(isset(static::$marco[$method])) {\r\n            $macro = static::$marco[$method];\r\n            $macro = $macro-&gt;bindTo($this, static::class);\r\n            \r\n            return $macro(...$parameters);\r\n        }\r\n        throw new BadMethodCallException(\'Method does not exist\');   \r\n    }\r\n}\r\n\r\n\r\nclass ExampleCollection {\r\n    use Macroable;\r\n    \r\n    protected $items;\r\n    \r\n    public function __construct($items)\r\n    {\r\n        $this-&gt;items = $items;\r\n    }\r\n    \r\n    public function first()\r\n    {\r\n        return $this-&gt;items[0];\r\n    }\r\n    \r\n}\r\n\r\nExampleCollection::marco(\'last\', function() {\r\n    return end($this-&gt;items);\r\n});\r\n\r\nRoute::get(\'/\', function () {\r\n    //return (new ExampleCollection([1,2,3]))-&gt;first();\r\n    return (new ExampleCollection([1,2,3]))-&gt;last();\r\n}); \r\n\r\n</pre><p>Take a look&nbsp;<code style=\"color: rgb(85, 85, 85);\">vendor/laravel/framework/src/Illuminate/Support/Traits/Macroable.php</code>, it\'s exactly same with what we create !</p><p><br></p>', '2020-01-01 13:05:00', 'https://images.unsplash.com/photo-1507525428034-b723cf961d3e?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjk2NDE2fQ', 'Photo by <a href=\"https://unsplash.com/@seantookthese\" target=\"_blank\">Sean O.</a> on <a href=\"https://unsplash.com\" target=\"_blank\">Unsplash</a>', '1', '{\"og_title\": null, \"twitter_title\": null, \"canonical_link\": null, \"og_description\": null, \"meta_description\": null, \"twitter_description\": null}', '2020-01-01 13:11:53', '2020-01-01 13:11:53', NULL, '1'),
('303dfa84-b363-43a7-bb1f-1cc495437d56', 'create-our-own-facade', 'Understand Laravel Core Concepts 2 (create your own Facade 2 ways)', 'this is a Laravel base source explains series. Facade is great but how can we create our own Facade?', '<h2><br></h2><h2><strong>First Create Facade Manually</strong></h2><p><br></p><p>create 2 files </p><pre class=\"ql-syntax\" spellcheck=\"false\"><span class=\"hljs-meta\">&lt;?php</span>\r\n\r\n<span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-title\">App</span>;\r\n\r\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Payment</span>\r\n</span>{\r\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">process</span><span class=\"hljs-params\">()</span>\r\n    </span>{\r\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">\'in process\'</span>;\r\n    }\r\n}\r\n</pre><div class=\"inline_html\" contenteditable=\"false\"></div><pre class=\"ql-syntax\" spellcheck=\"false\"><span class=\"hljs-meta\">&lt;?php</span>\r\n\r\n<span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-title\">App</span>;\r\n\r\n<span class=\"hljs-keyword\">use</span> <span class=\"hljs-title\">Illuminate</span>\\<span class=\"hljs-title\">Support</span>\\<span class=\"hljs-title\">Facades</span>\\<span class=\"hljs-title\">Facade</span>;\r\n\r\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">PaymentFacade</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Facade</span>\r\n</span>{\r\n    <span class=\"hljs-keyword\">protected</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">getFacadeAccessor</span><span class=\"hljs-params\">()</span>\r\n    </span>{\r\n        <span class=\"hljs-keyword\">return</span> Payment::class;\r\n    }\r\n}\r\n</pre><p><br></p><p>register in <code>app\\config.php</code></p><p>then you can use it in <code>web.php</code></p><pre class=\"ql-syntax\" spellcheck=\"false\">Route::get(<span class=\"hljs-string\">\'/\'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-params\">()</span> </span>{\r\n    <span class=\"hljs-keyword\">return</span> Payment::process();\r\n});\r\n</pre><p><br></p><h2><strong>Second Create Facade Automatically (Real-time Facades)</strong></h2><p><br></p><p><span class=\"hljs-attribute\">without</span> <code>PaymentFacade</code> class and alias in <code>config.php</code>, add something in <code>web.php</code></p><pre class=\"ql-syntax\" spellcheck=\"false\"><span class=\"hljs-keyword\">use</span> <span class=\"hljs-title\">Facades</span>\\<span class=\"hljs-title\">App</span>\\<span class=\"hljs-title\">Payment</span>;\r\n\r\nRoute::get(<span class=\"hljs-string\">\'/\'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-params\">()</span> </span>{\r\n    <span class=\"hljs-keyword\">return</span> Payment::process();\r\n});\r\n</pre><p>you can still get the same result! How Amazing 🙀 !</p><p>Actually, Laravel generate PaymentFacade class automatically. If you look into </p><pre class=\"ql-syntax\" spellcheck=\"false\"><span class=\"hljs-comment\">// storage/framework/cache/facade-713d26851e5ea21f90db4510b9ac1ce3e9199d9a.php</span>\r\n\r\n<span class=\"hljs-meta\">&lt;?php</span>\r\n\r\n<span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-title\">Facades</span>\\<span class=\"hljs-title\">App</span>;\r\n\r\n<span class=\"hljs-keyword\">use</span> <span class=\"hljs-title\">Illuminate</span>\\<span class=\"hljs-title\">Support</span>\\<span class=\"hljs-title\">Facades</span>\\<span class=\"hljs-title\">Facade</span>;\r\n\r\n<span class=\"hljs-comment\">/**\r\n * <span class=\"hljs-doctag\">@see</span> \\App\\Payment\r\n */</span>\r\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Payment</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Facade</span>\r\n</span>{\r\n    <span class=\"hljs-comment\">/**\r\n     * Get the registered name of the component.\r\n     *\r\n     * <span class=\"hljs-doctag\">@return</span> string\r\n     */</span>\r\n    <span class=\"hljs-keyword\">protected</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">getFacadeAccessor</span><span class=\"hljs-params\">()</span>\r\n    </span>{\r\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">\'App\\Payment\'</span>;\r\n    }\r\n}\r\n</pre><p>there will be an almost same file with what we created before!</p>', '2019-12-30 11:07:00', 'https://images.unsplash.com/photo-1504105547124-fc1aee34470d?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjk2NDE2fQ', 'Photo by <a href=\"https://unsplash.com/@schmutccsongor\" target=\"_blank\">Csongor Schmutc</a> on <a href=\"https://unsplash.com\" target=\"_blank\">Unsplash</a>', '1', '{\"og_title\": null, \"twitter_title\": null, \"canonical_link\": null, \"og_description\": null, \"meta_description\": null, \"twitter_description\": null}', '2019-12-30 11:20:35', '2020-01-01 12:26:19', NULL, '1'),
('31cc2ab6-18dc-4124-ac42-052e4b47d337', 'npx-the-hidden-gem-comes-with-npm', 'Npx the hidden command behind npm', 'Every time we want to use npm to install a package locally but run it in command line is a problem. Npx comes to fix it.', '<p>From the node version , when you install npm, npx comes with it.</p><p>some packages you just want to install with npm locally, but run it in command line is difficult.</p><p><br></p><p>because the path of these packages is ./.node_modules/bin/xxx</p><p>npx comes out and fix this problem.</p>', '2019-11-14 09:34:00', 'https://images.unsplash.com/photo-1472437774355-71ab6752b434?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjk2NDE2fQ', 'Photo by <a href=\"https://unsplash.com/@grakozy\" target=\"_blank\">Greg Rakozy</a> on <a href=\"https://unsplash.com\" target=\"_blank\">Unsplash</a>', '1', '{\"og_title\": null, \"twitter_title\": null, \"canonical_link\": null, \"og_description\": null, \"meta_description\": \"Npm, Npx, Node.js, JavaScript\", \"twitter_description\": null}', '2019-11-14 09:46:29', '2019-11-14 11:41:43', '2019-11-14 11:41:43', '0'),
('5dad068f-705b-4262-8259-0f5b37b4747d', 'a-vue-js-learning-memo', 'a note of Vue.js learning (continuously updating )', 'a learning memo to Vuejs (continuously updating )', '<div class=\"inline_html\" contenteditable=\"false\"></div><p><br></p><h2><strong>How to manipulate Dom element like JQuery in vue?</strong></h2><pre class=\"ql-syntax\" spellcheck=\"false\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">template</span>&gt;</span>\r\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"btn btn-blue\"</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"test_button\"</span> <span class=\"hljs-attr\">ref</span>=<span class=\"hljs-string\">\"test_button\"</span>&gt;</span>\r\n    {{ msg }}\r\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\r\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">template</span>&gt;</span>\r\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span>\r\n <span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> {\r\n  mounted() {\r\n    <span class=\"hljs-comment\">//try to manipulate dom directly by vue</span>\r\n    <span class=\"hljs-keyword\">const</span> buttonByVue = <span class=\"hljs-keyword\">this</span>.$refs.nice_button\r\n    <span class=\"hljs-built_in\">console</span>.log(buttonByVue);\r\n    buttonByVue.innerHTML = <span class=\"hljs-string\">\"changed by vue\"</span>;\r\n    \r\n    <span class=\"hljs-comment\">//manipute dom element normally</span>\r\n    <span class=\"hljs-keyword\">const</span> buttonByVanilla = <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"test_button\"</span>)\r\n    <span class=\"hljs-built_in\">console</span>.log(buttonByVanilla);\r\n    buttonByVanilla.innerHTML = <span class=\"hljs-string\">\"changed by vanilla js\"</span>;\r\n  }\r\n } \r\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\r\n</pre><p>these two ways are totally equivalent!</p><p><br></p><h2><strong>How to watch Vuex state change ?</strong></h2><div class=\"inline_html\" contenteditable=\"false\"></div><pre class=\"ql-syntax\" spellcheck=\"false\"><span class=\"hljs-regexp\">//</span>xxx.vue  \r\nmounted() {\r\n        <span class=\"hljs-keyword\">this</span>.$store.watch(\r\n            <span class=\"hljs-function\"><span class=\"hljs-params\">(state, getters)</span> =&gt;</span> getters.loadingState,\r\n            <span class=\"hljs-function\"><span class=\"hljs-params\">(newValue, oldValue)</span> =&gt;</span> {\r\n                <span class=\"hljs-keyword\">if</span> (!newValue) {\r\n                    <span class=\"hljs-built_in\">console</span>.log(newValue);\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n\r\n</pre><p><br></p><pre class=\"ql-syntax\" spellcheck=\"false\"><span class=\"hljs-comment\">//xxStore.js</span>\r\n<span class=\"hljs-keyword\">const</span> state = {\r\n    <span class=\"hljs-attr\">loading</span>: <span class=\"hljs-literal\">true</span>,\r\n};\r\n\r\n\r\n<span class=\"hljs-keyword\">const</span> getters = {\r\n    <span class=\"hljs-attr\">loadingState</span>: <span class=\"hljs-function\"><span class=\"hljs-params\">state</span> =&gt;</span> state.loading\r\n};\r\n</pre>', '2019-12-15 23:26:00', 'https://images.unsplash.com/photo-1516314774844-26f6888144e8?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjk2NDE2fQ', 'Photo by <a href=\"https://unsplash.com/@taylor_grote\" target=\"_blank\">Taylor Grote</a> on <a href=\"https://unsplash.com\" target=\"_blank\">Unsplash</a>', '1', '{\"og_title\": null, \"twitter_title\": null, \"canonical_link\": null, \"og_description\": null, \"meta_description\": null, \"twitter_description\": null}', '2019-12-15 23:35:17', '2020-01-12 22:40:19', NULL, '1'),
('6fa7fb43-e98c-4718-923a-8eb5b56bede3', 'laravel-series-how-facade-works', 'Understand Laravel Core Concepts 1 (how Facade works under the hood)', 'this is a Laravel base source explains series, facade provide a user-friendly interface but how it works?', '<h2><strong>How to access Facade Classes in grobal namespace</strong></h2><p><br></p><p>in&nbsp;<code style=\"color: rgb(85, 85, 85);\">config\\app.php</code>&nbsp;</p><p>these is a area for aliases like</p><pre class=\"ql-syntax\" spellcheck=\"false\"><span class=\"hljs-string\">\'aliases\'</span> =&gt; [\r\n\r\n        <span class=\"hljs-string\">\'App\'</span> =&gt; Illuminate\\Support\\Facades\\App::<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span>,</span>\r\n        <span class=\"hljs-string\">\'Arr\'</span> =&gt; Illuminate\\Support\\Arr::<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span>,</span>\r\n        <span class=\"hljs-string\">\'Artisan\'</span> =&gt; Illuminate\\Support\\Facades\\Artisan::<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span>,</span>\r\n        <span class=\"hljs-string\">\'Auth\'</span> =&gt; Illuminate\\Support\\Facades\\Auth::<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span>,</span>\r\n        <span class=\"hljs-string\">\'Blade\'</span> =&gt; Illuminate\\Support\\Facades\\Blade::<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span>,</span>\r\n        <span class=\"hljs-string\">\'Broadcast\'</span> =&gt; Illuminate\\Support\\Facades\\Broadcast::<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span>,</span>\r\n        <span class=\"hljs-string\">\'Bus\'</span> =&gt; Illuminate\\Support\\Facades\\Bus::<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span>,</span>\r\n        <span class=\"hljs-string\">\'Cache\'</span> =&gt; Illuminate\\Support\\Facades\\Cache::<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span>,</span>\r\n        <span class=\"hljs-string\">\'Config\'</span> =&gt; Illuminate\\Support\\Facades\\Config::<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span>,</span>\r\n        <span class=\"hljs-string\">\'Cookie\'</span> =&gt; Illuminate\\Support\\Facades\\Cookie::<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span>,</span>\r\n        <span class=\"hljs-string\">\'Crypt\'</span> =&gt; Illuminate\\Support\\Facades\\Crypt::<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span>,</span>\r\n        <span class=\"hljs-string\">\'DB\'</span> =&gt; Illuminate\\Support\\Facades\\DB::<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span>,</span>\r\n        <span class=\"hljs-string\">\'Eloquent\'</span> =&gt; Illuminate\\Database\\Eloquent\\Model::<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span>,</span>\r\n        <span class=\"hljs-string\">\'Event\'</span> =&gt; Illuminate\\Support\\Facades\\Event::<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span>,</span>\r\n        <span class=\"hljs-string\">\'File\'</span> =&gt; Illuminate\\Support\\Facades\\File::<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span>,</span>\r\n        <span class=\"hljs-regexp\">//</span><span class=\"hljs-string\">\'Gate\'</span> =&gt; Illuminate\\Support\\Facades\\Gate::<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span>,</span>\r\n        ....\r\n</pre><p>if you comment out alias, you can still access manually.</p><pre class=\"ql-syntax\" spellcheck=\"false\"><span class=\"hljs-comment\">// php artisan tinker</span>\r\n&gt;&gt;&gt; class_alias(Illuminate\\Support\\Facades\\Gate::class,<span class=\"hljs-string\">\'Gate\'</span>);\r\n=&gt; <span class=\"hljs-keyword\">true</span>\r\n&gt;&gt;&gt; Gate::allows(<span class=\"hljs-string\">\'update\'</span>);\r\n=&gt; <span class=\"hljs-keyword\">false</span>\r\n\r\n</pre><h2><br></h2><h2><strong>How to call a Method in Facade Class</strong></h2><p><br></p><pre class=\"ql-syntax\" spellcheck=\"false\"><span class=\"hljs-comment\"># vendor/laravel/framework/src/Illuminate/Support/Facades/Facade.php</span>\r\n\r\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">__callStatic</span><span class=\"hljs-params\">($method, $args)</span>\r\n    </span>{\r\n        $instance = <span class=\"hljs-keyword\">static</span>::getFacadeRoot();\r\n\r\n        <span class=\"hljs-keyword\">if</span> (! $instance) {\r\n            <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> RuntimeException(<span class=\"hljs-string\">\'A facade root has not been set.\'</span>);\r\n        }\r\n\r\n        <span class=\"hljs-keyword\">return</span> $instance-&gt;$method(...$args);\r\n    }\r\n</pre><p><br></p><p>which is a build in php Magic Methods.</p><blockquote><em>__callStatic() is triggered when invoking inaccessible methods in a static context.</em></blockquote><pre class=\"ql-syntax\" spellcheck=\"false\">    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">getFacadeRoot</span><span class=\"hljs-params\">()</span>\r\n    </span>{\r\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">static</span>::resolveFacadeInstance(<span class=\"hljs-keyword\">static</span>::getFacadeAccessor());\r\n    }\r\n    ⬇︎\r\n    <span class=\"hljs-keyword\">protected</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">resolveFacadeInstance</span><span class=\"hljs-params\">($name)</span>\r\n    </span>{\r\n        <span class=\"hljs-keyword\">if</span> (is_object($name)) {\r\n            <span class=\"hljs-keyword\">return</span> $name;\r\n        }\r\n\r\n        <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">isset</span>(<span class=\"hljs-keyword\">static</span>::$resolvedInstance[$name])) {\r\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">static</span>::$resolvedInstance[$name];\r\n        }\r\n\r\n        <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">static</span>::$app) {\r\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">static</span>::$resolvedInstance[$name] = <span class=\"hljs-keyword\">static</span>::$app[$name];\r\n        }\r\n    }\r\n\r\n</pre><p>in every Facade classes there is a&nbsp;</p><pre class=\"ql-syntax\" spellcheck=\"false\">    protected <span class=\"hljs-keyword\">static</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">getFacadeAccessor</span>()\r\n    </span>{\r\n        <span class=\"hljs-keyword\">return</span> GateContract::<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>;\r\n    }\r\n</pre><p><br></p><p>return a string or class name which will passed to&nbsp;<code style=\"color: rgb(85, 85, 85);\">resolveFacadeInstance</code>&nbsp;function. <code style=\"color: rgb(85, 85, 85);\">static::$app[$name]</code>&nbsp;is same with&nbsp;<code style=\"color: rgb(85, 85, 85);\">app(\'gate\') or $this-&gt;app(Gate::class) or others </code>which will get the registered class with the given \'string\' like \'gate\' or&nbsp;<code style=\"color: rgb(85, 85, 85);\">GateContract::class</code> in ServiceProvider.</p><h2><br></h2><h2><strong>How Service Provider works ?</strong></h2><p><br></p><pre class=\"ql-syntax\" spellcheck=\"false\"><span class=\"hljs-comment\"># vendor/laravel/framework/src/Illuminate/Auth/Access/Gate.php</span>\r\n\r\n    <span class=\"hljs-keyword\">protected</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">registerAccessGate</span><span class=\"hljs-params\">()</span>\r\n    </span>{\r\n        <span class=\"hljs-keyword\">$this</span>-&gt;app-&gt;singleton(GateContract::class, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-params\">($app)</span> </span>{\r\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> Gate($app, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-params\">()</span> <span class=\"hljs-title\">use</span> <span class=\"hljs-params\">($app)</span> </span>{\r\n                <span class=\"hljs-keyword\">return</span> call_user_func($app[<span class=\"hljs-string\">\'auth\'</span>]-&gt;userResolver());\r\n            });\r\n        });\r\n    }\r\n</pre><p><br></p><p>it register \'gate\' to Laravel, so when <span class=\"hljs-keyword\">call</span> a facade method <span class=\"hljs-keyword\">like</span>&nbsp;Gate::allows(<span class=\"hljs-string\">\'update\'</span>)&nbsp;<span class=\"hljs-keyword\">is</span> <span class=\"hljs-keyword\">not</span> <span class=\"hljs-keyword\">call</span> a <span class=\"hljs-keyword\">static</span> method but <span class=\"hljs-keyword\">call</span> a&nbsp;__callStatic&nbsp;method <span class=\"hljs-keyword\">then</span> <span class=\"hljs-keyword\">get</span> the registered &nbsp;gate <span class=\"hljs-keyword\">or</span> Illuminate\\Support\\Facades\\Gate::<span class=\"hljs-keyword\">class</span>&nbsp;<span class=\"hljs-keyword\">in</span> service provider <span class=\"hljs-keyword\">of</span> the Laravel application which point <span class=\"hljs-keyword\">to</span> <code>Illuminate\\Auth\\</code><code class=\"hljs-keyword\">Access</code><code>\\Gate</code> which has a <code>allows</code> method</p><pre class=\"ql-syntax\" spellcheck=\"false\"><span class=\"hljs-comment\"># vendor/laravel/framework/src/Illuminate/Auth/Access/Gate.php</span>\r\n\r\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">allows</span><span class=\"hljs-params\">($ability, $arguments = [])</span>\r\n    </span>{\r\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">$this</span>-&gt;check($ability, $arguments);\r\n    }\r\n</pre><p><br></p><h2><br></h2><h2><strong>How to register in servicer provider ?</strong></h2><p><br></p><p>the simplest example</p><pre class=\"ql-syntax\" spellcheck=\"false\"><span class=\"hljs-comment\"># app/web.php</span>\r\n\r\napp()-&gt;bind(<span class=\"hljs-string\">\'foo\'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-params\">()</span> </span>{\r\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">\'value\'</span>;\r\n});\r\n\r\n<span class=\"hljs-comment\">#php artisan tinker</span>\r\n&gt;&gt;&gt; app(<span class=\"hljs-string\">\'foo\'</span>);\r\n=&gt; <span class=\"hljs-string\">\"value\"</span>\r\n</pre><p>as you can see 😉</p><p><br></p>', '2019-12-29 22:13:00', 'https://images.unsplash.com/photo-1543652916-343e9d77d896?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjk2NDE2fQ', 'Photo by <a href=\"https://unsplash.com/@makuph\" target=\"_blank\">Claudia Ramírez</a> on <a href=\"https://unsplash.com\" target=\"_blank\">Unsplash</a>', '1', '{\"og_title\": null, \"twitter_title\": null, \"canonical_link\": null, \"og_description\": null, \"meta_description\": null, \"twitter_description\": null}', '2019-12-29 22:21:14', '2020-01-01 12:26:00', NULL, '1'),
('70a456c1-5187-46ac-9d4f-40d4c8e1d8a2', 'macos-memos', 'Some secret notes about using Mac OS (continuously updating ),', 'a note about macOS, some of these are tricky don\'t recommend to everyone 😉', '<p><br></p><p>1.open app with a broken system message  + path of app</p><p><br></p><pre class=\"ql-syntax\" spellcheck=\"false\">sudo xattr -r -d com.apple.quarantine \r\n</pre><p><br></p><p>example</p><p><br></p><pre class=\"ql-syntax\" spellcheck=\"false\"><span class=\"hljs-attribute\">sudo</span> xattr -r -d com.apple.quarantine /Applications/XXX.app\r\n</pre><p><br></p><p>2.show full path in finder</p><p><br></p><pre class=\"ql-syntax\" spellcheck=\"false\">defaults write com.apple.finder _FXShowPosixPathInTitle -bool YES\r\n</pre><p><br></p><p>3.change Alfred default terminal to iterm2</p><p><br></p><pre class=\"ql-syntax\" spellcheck=\"false\"><span class=\"hljs-attribute\">curl</span> --silent <span class=\"hljs-string\">\'https://raw.githubusercontent.com/stuartcryan/custom-iterm-applescripts-for-alfred/master/custom_iterm_script_iterm_3.1.1.applescript\'</span> | pbcopy\r\n</pre><p><br></p><p>get detail in this <a href=\"https://github.com/stuartcryan/custom-iterm-applescripts-for-alfred\" target=\"_blank\">repo</a> 👽</p><p><br></p><h2><br></h2><h2><strong>Shortcuts</strong></h2><p><br></p><p><code style=\"background-color: rgb(240, 240, 240);\">⌘ + c</code>  <span class=\"hljs-keyword\">then</span> <code style=\"background-color: rgb(240, 240, 240);\">⌘ + ⌥ + v</code></p><p><br></p><p><br></p>', '2019-12-01 16:17:00', 'https://images.unsplash.com/photo-1477124508671-45ba8ede458f?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjk2NDE2fQ', 'Photo by <a href=\"https://unsplash.com/@r_shayesrehpour\" target=\"_blank\">reza shayestehpour</a> on <a href=\"https://unsplash.com\" target=\"_blank\">Unsplash</a>', '1', '{\"og_title\": null, \"twitter_title\": null, \"canonical_link\": null, \"og_description\": null, \"meta_description\": null, \"twitter_description\": null}', '2019-12-01 16:24:07', '2019-12-29 17:36:49', NULL, '1'),
('74d2e0e1-1cf2-47cc-a912-d99308253eab', 'undo-commits-locally-remote', 'How to undo commits locally and remote? play some tricks?', '3 solutions to deal with \'undo\' commit both locally and remote. Secretly \r\n😈 or Frankly 🤕 .', '<p>Basically, there are 3 ways to deal with this problem.</p><p><br></p><p>1.&nbsp;<code style=\"background-color: rgb(238, 238, 238); color: rgb(74, 74, 74);\">git reset</code></p><p>2.&nbsp;<code style=\"background-color: rgb(238, 238, 238); color: rgb(74, 74, 74);\">git revert</code></p><p>3.&nbsp;<code style=\"background-color: rgb(238, 238, 238); color: rgb(74, 74, 74);\">git rebase</code></p><h2><br></h2><h2><a href=\"https://git-scm.com/docs/git-reset\" target=\"_blank\" style=\"color: rgb(98, 0, 172);\"><strong>git reset</strong></a><strong>&nbsp;(doesn\'t leave any record)</strong></h2><p><br></p><p><br></p><h3><strong>* First undo last commit locally</strong></h3><p><br></p><p>Force to undo the last commit in a local repository, HEAD^ means return last one commit.</p><p><br></p><pre class=\"ql-syntax\" spellcheck=\"false\">𝛴 git <span class=\"hljs-keyword\">reset</span> <span class=\"hljs-comment\">--hard HEAD^</span>\r\n𝛴 git <span class=\"hljs-keyword\">reset</span> <span class=\"hljs-comment\">--soft HEAD^</span>\r\n𝛴 git <span class=\"hljs-keyword\">reset</span> <span class=\"hljs-comment\">--soft 8a15r31</span>\r\n</pre><p><br></p><p><code style=\"background-color: rgb(238, 238, 238); color: rgb(74, 74, 74);\">--hard</code>&nbsp;discard changes totally.</p><p><br></p><p><code style=\"background-color: rgb(238, 238, 238); color: rgb(74, 74, 74);\">--soft</code>&nbsp;keep changes. If&nbsp;<code style=\"background-color: rgb(238, 238, 238); color: rgb(74, 74, 74);\">git commit</code>, there will be the same commit that undone one.</p><p>rather than return to one commit before, give a specific commit id like&nbsp;<code style=\"background-color: rgb(238, 238, 238); color: rgb(74, 74, 74);\">8a15r31</code>, is the same.</p><p><br></p><h3>* Force push to remote</h3><p><br></p><p>After a local undo procedure, then push remote. If you just normal push, there will be conflict. Therefore, we need to use&nbsp;<strong>Force Push</strong>&nbsp;with a&nbsp;<code style=\"background-color: rgb(238, 238, 238); color: rgb(74, 74, 74);\">-f</code>&nbsp;flag.</p><p><br></p><pre class=\"ql-syntax\" spellcheck=\"false\">𝛴 git <span class=\"hljs-keyword\">push</span> -f origin master\r\n</pre><p>[origin master] is the branch that has the wrong commit.</p><p>Normally, don\'t use this way except you have full control of the repository that you\'re working on.</p><p><br></p><h2><a href=\"https://git-scm.com/docs/git-revert\" target=\"_blank\" style=\"color: rgb(98, 0, 172);\"><strong>git revert</strong></a><strong>(leave a record)</strong></h2><p><br></p><h3><strong>* First undo last commit locally</strong></h3><p><br></p><pre class=\"ql-syntax\" spellcheck=\"false\">𝛴 git revert HEAD\r\n𝛴 git revert HEAD --<span class=\"hljs-literal\">no</span>-commit\r\n</pre><p><br></p><p>These will create a new commit to \'kill\' the last commit, without&nbsp;<code style=\"background-color: rgb(238, 238, 238); color: rgb(74, 74, 74);\">--no-commit</code>&nbsp;or&nbsp;<code style=\"background-color: rgb(238, 238, 238); color: rgb(74, 74, 74);\">-n</code>, get into vi-mode to edit commit comment, if no editing comment will seem like</p><p><br></p><pre class=\"ql-syntax\" spellcheck=\"false\"><span class=\"hljs-attribute\">Revert</span> <span class=\"hljs-string\">\"commit comment\"</span>\r\n    This reverts commit d7795f88ebd5bf427c4c20faa9d372c997c8e490.\r\n</pre><h3><br></h3><h3>* Push to remote</h3><p><br></p><pre class=\"ql-syntax\" spellcheck=\"false\">𝛴 git <span class=\"hljs-keyword\">push</span> origin master\r\n</pre><p><br></p><p>Push commit to the remote.</p><p><br></p><p>Here is the complete&nbsp;<a href=\"https://stackoverflow.com/a/36177806\" target=\"_blank\" style=\"color: rgb(98, 0, 172);\">solution</a>, how deal with local, Github and server.</p><h2><br></h2><h2><a href=\"https://git-scm.com/docs/git-rebase\" target=\"_blank\" style=\"color: rgb(98, 0, 172);\"><strong>git rebase</strong></a><strong>(edit commits history)</strong></h2><p><br></p><p>Most of the time, just undo a commit, don\'t need to use this command, but combine several commits to ONE commit,&nbsp;<code style=\"color: rgb(74, 74, 74); background-color: rgb(238, 238, 238);\">git rebase</code>&nbsp;is useful.</p><p><br></p>', '2019-10-24 22:19:00', 'https://images.unsplash.com/photo-1556075798-4825dfaaf498?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjk2NDE2fQ', 'Photo by <a href=\"https://unsplash.com/@yancymin\" target=\"_blank\">Yancy Min</a> on <a href=\"https://unsplash.com\" target=\"_blank\">Unsplash</a>', '1', '{\"og_title\": null, \"twitter_title\": null, \"canonical_link\": null, \"og_description\": null, \"meta_description\": null, \"twitter_description\": null}', '2019-10-24 12:21:49', '2019-12-01 13:40:42', NULL, '1'),
('76ccba69-5bbc-4d81-88aa-668165aae758', 'how-to-get-a-free-SSL-certificate', 'Get a free SSL Certificate, and convert HTTP to HTTPS', 'Get a free SSL certificate and turn HTTP to HTTPS, give a security promise to our lovely users 🦁 .', '<p><span style=\"background-color: transparent;\">&nbsp;</span></p><p>		<span style=\"background-color: transparent;\">To be honest, as a self-taught web developer, sometimes get a SSL Certificate, turn Http to https sounds like black magic(at least for me), always been done by infrastructure team. However, when you want to start blogging, freelancing, a side project or just demo your amazing library, getting a SSL certificate is kind of necessary but painful for us.</span></p><p><br></p><p><br></p><p><span style=\"background-color: transparent;\">We won\'t talk about any complex concepts like the difference between SSL and TSL, or the security level of your certificate. I just want to show you the short way to turn that exclamation mark to a nicely lock besides our domain in Chrome(maybe you don\'t use Chrome😅). If you just wanna&nbsp;</span><strong style=\"background-color: transparent;\">get a certificate asap and importantly it\'s FREE, this tutorial is for YOU!</strong></p><div class=\"embedded_image\" contenteditable=\"false\" data-layout=\"default\"><img alt=\"\" src=\"/storage/canvas/images/YswIRgCtucanD50kPz8I3D2Ybjw7KKs8eTAJNViI.png\"></div><p><br></p><p><br></p><h2><strong style=\"background-color: transparent;\">There are some requirements that we must clear!</strong></h2><p><span style=\"background-color: transparent;\">①  we can access our website with HTTP in browser</span></p><p><span style=\"background-color: transparent;\">②  be able to SSH into and sudo the server of our server</span></p><p><br></p><p><br></p><hr><p><br></p><h2><strong style=\"background-color: transparent;\">Let\'s get certificate!</strong></h2><p><br></p><p><br></p><p><span style=\"background-color: transparent;\">Go to&nbsp;</span><a href=\"https://certbot.eff.org/\" target=\"_blank\" style=\"color: rgb(74, 110, 224); background-color: transparent;\">https://certbot.eff.org/</a><span style=\"background-color: transparent;\">&nbsp;which runs by&nbsp;</span><a href=\"https://letsencrypt.org/\" target=\"_blank\" style=\"color: rgb(74, 110, 224); background-color: transparent;\">Let\'s Encrypt</a><span style=\"background-color: transparent;\">, the authority that help us get a Free SSL/TLS Certificates. If you have some time or have any problems, highly recommend you go to&nbsp;</span><a href=\"https://letsencrypt.org/\" target=\"_blank\" style=\"color: rgb(74, 110, 224); background-color: transparent;\">Let\'s Encrypt</a><span style=\"background-color: transparent;\">&nbsp;to check out documentation. Let\'s skip the research parts, and get into the certificate itself directly.</span></p><p><br></p><p><br></p><h2><strong style=\"background-color: transparent;\">STEP1: Select our web server software and operating system</strong></h2><p><br></p><p><br></p><p><span style=\"background-color: transparent;\">In my situation, I\'m using Apache and Centos7. You might be different from me, but it\'s not a big deal. Just like declare a class in different programming languages with the different syntax but same concept and step. If you are using exactly the same with me, just follow my steps, otherwise, visit&nbsp;</span><a href=\"https://letsencrypt.org/\" target=\"_blank\" style=\"color: rgb(74, 110, 224); background-color: transparent;\">Let\'s Encrypt</a><span style=\"background-color: transparent;\">, you can do it!</span></p><div class=\"embedded_image\" contenteditable=\"false\" data-layout=\"default\"><img alt=\"\" src=\"/storage/canvas/images/t2FJ0SolO9cQMbrGR8IArl6O42lq6j1x1vOeB5L0.png\"></div><p><br></p><h2><br></h2><h2><strong style=\"background-color: transparent;\">STEP2: SSH into the server&nbsp;</strong></h2><p><br></p><p><br></p><p>I\'m using&nbsp;<a href=\"https://cloud.google.com/compute/\" target=\"_blank\">Google Cloud Platform Compute Engine</a>&nbsp;which give us 300 dollars credit <span class=\"hljs-keyword\">with</span> a <span class=\"hljs-keyword\">year</span> trail. <span class=\"hljs-keyword\">Switch</span> <span class=\"hljs-keyword\">to</span> root <span class=\"hljs-keyword\">user</span> <span class=\"hljs-keyword\">with</span>  <code>sudo su</code> .</p><p><br></p><h2><br></h2><h2><strong style=\"background-color: transparent;\">STEP3: Enable EPEL repo</strong></h2><p><br></p><p><br></p><p><span style=\"background-color: transparent;\">With Centos OS, I have this step, If you\'re using Ubuntu or Debian or other Linux distribution might not need to get into this step. For Centos7 run this command:</span></p><pre class=\"ql-syntax\" spellcheck=\"false\">&nbsp;λ yum install <span class=\"hljs-symbol\">https:</span>/<span class=\"hljs-regexp\">/dl.fedoraproject.org/pub/epel/epel</span>-release-latest-<span class=\"hljs-number\">7</span>.noarch.rpm\r\n</pre><h2><br></h2><p><br></p><h2><strong style=\"background-color: transparent;\">STEP4: Enable the optional channel and Install Certbot</strong></h2><p><br></p><p><br></p><p><em style=\"background-color: transparent;\">If you\'re using RHEL or Oracle Linux, you\'ll also need to enable the optional channel. On EC2, RHEL users can enable the optional channel by running the following command, substituting your EC2 region for REGION in the command:</em></p><pre class=\"ql-syntax\" spellcheck=\"false\">λ yum -y <span class=\"hljs-keyword\">install</span> yum-utils\r\nλ yum-config-manager <span class=\"hljs-comment\">--enable rhui-REGION-rhel-server-extras rhui-REGION-rhel-server-optional</span>\r\n</pre><p><em style=\"background-color: transparent;\">Run this command on the command line on the machine to install Certbot.</em></p><pre class=\"ql-syntax\" spellcheck=\"false\">λ sudo yum <span class=\"hljs-keyword\">install</span> certbot python2-certbot-apache\r\n</pre><h2><br></h2><p><br></p><h2><strong style=\"background-color: transparent;\">STEP5: Get a certificate and run Certbot</strong></h2><p><br></p><p><br></p><p><em style=\"background-color: transparent;\">Run this command to get a certificate and have Certbot edit your Apache configuration automatically to serve it, turning on HTTPS access in a single step.</em></p><pre class=\"ql-syntax\" spellcheck=\"false\">λ sudo certbot <span class=\"hljs-comment\">--apache</span>\r\n</pre><p><em style=\"background-color: transparent;\">If you\'re feeling more conservative and would like to make the changes to your Apache configuration by hand, run this command.</em></p><pre class=\"ql-syntax\" spellcheck=\"false\">λ sudo certbot certonly <span class=\"hljs-comment\">--apache</span>\r\n</pre><p><span style=\"background-color: transparent;\">I just run first one.</span></p><p><span style=\"background-color: transparent;\">Before that we have to make sure, in our apache configuration file there are something like this( a virtual host listing 80 port with your domain name).If you don\'t know where is your apache config, this is mine -&gt; </span><code style=\"background-color: transparent;\"><em>/etc/httpd/conf/httpd.conf&nbsp;</em></code></p><pre class=\"ql-syntax\" spellcheck=\"false\"><span class=\"hljs-attribute\"><span class=\"hljs-nomarkup\">Listen</span></span> 80\r\n<span class=\"hljs-section\">&lt;VirtualHost *:80&gt;</span>\r\n&nbsp;&nbsp;&nbsp;<span class=\"hljs-attribute\"><span class=\"hljs-nomarkup\">DocumentRoot</span></span> <span class=\"hljs-string\">\"/www/example1\"</span>\r\n&nbsp;&nbsp;&nbsp;<span class=\"hljs-attribute\"><span class=\"hljs-nomarkup\">ServerName</span></span> www.example.com\r\n\r\n&nbsp;&nbsp;&nbsp;<span class=\"hljs-comment\"># Other directives here</span>\r\n<span class=\"hljs-section\">&lt;/VirtualHost&gt;</span>\r\n</pre><p><span style=\"background-color: transparent;\">Otherwise, we can\' run </span><code style=\"background-color: transparent;\">sudo certbot --apache</code><span style=\"background-color: transparent;\"> properly. Might get an error like below:</span></p><pre class=\"ql-syntax\" spellcheck=\"false\">Unable to find a virtual host listening on port 80 which is currently needed for Certbot to prove to the CA that you control your domain. Please add a virtual host for port 80.\r\n</pre><p><span style=\"background-color: transparent;\">Then in CLI certbot will ask us some basic questions like email address, domain name and choose redirect HTTP to HTTPS, etc. After some setting, we get output like this.&nbsp;</span></p><pre class=\"ql-syntax\" spellcheck=\"false\">Congratulations! You have successfully enabled&nbsp;https:<span class=\"hljs-comment\">//www.xyyolab.com</span>\r\nYou should test your configuration at:\r\nhttps:<span class=\"hljs-comment\">//www.ssllabs.com/ssltest/analyze.html?d=www.xyyolab.com</span>\r\n</pre><p><span style=\"color: rgb(74, 74, 74);\">Voilà, </span><span style=\"background-color: transparent;\">Congratulations ! Go to a testing website or just access our website in browser check that lock and certificate.</span></p><div class=\"embedded_image\" contenteditable=\"false\" data-layout=\"default\"><img alt=\"\" src=\"/storage/canvas/images/KJwESE7pRHYFd0fw2rNcaeMlBb96lKTOTsMpWoGV.png\"></div><h2><br></h2><p><br></p><h2><strong style=\"background-color: transparent;\">STEP6:Set up automatic renewal</strong></h2><p><br></p><p><br></p><p><span style=\"background-color: transparent;\">This certificate from&nbsp;</span><a href=\"https://letsencrypt.org/\" target=\"_blank\" style=\"color: rgb(74, 110, 224); background-color: transparent;\">Let\'s Encrypt</a><span style=\"background-color: transparent;\">&nbsp;will expire after 90 days, so we should set up automatically renewing program. Yes, it\'s&nbsp;</span><a href=\"https://en.wikipedia.org/wiki/Cron\" target=\"_blank\" style=\"color: rgb(74, 110, 224); background-color: transparent;\">cronjob</a><span style=\"background-color: transparent;\">! We don\'t have write it ourself, </span><a href=\"https://certbot.eff.org/\" target=\"_blank\" style=\"color: rgb(74, 110, 224); background-color: transparent;\">https://certbot.eff.org/</a><span style=\"background-color: transparent;\">&nbsp;prepared for us.</span></p><pre class=\"ql-syntax\" spellcheck=\"false\">echo <span class=\"hljs-string\">\"0 0,12 * * * root python -c \'import random; import time; time.sleep(random.random() * 3600)\' &amp;&amp; certbot renew\"</span> | sudo tee -a /etc/crontab &gt; <span class=\"hljs-regexp\">/dev/</span><span class=\"hljs-literal\">null</span>\r\n</pre><h2><br></h2><p><br></p><h2><strong style=\"background-color: transparent;\">Wrapping Up</strong></h2><p><br></p><p><br></p><p><span style=\"background-color: transparent;\">Hope you set up your certificate and website successfully! This is not the best way to set up a business website but for some personal purpose, it\'s enough and fast. If you have some spare time, highly recommend read some documentation in&nbsp;</span><a href=\"https://letsencrypt.org/\" target=\"_blank\" style=\"color: rgb(74, 110, 224); background-color: transparent;\">Let\'s Encrypt</a><span style=\"background-color: transparent;\">&nbsp;or gain some knowledge about why we need SSL certificate or what\'s the real meaning of it, it will definitely help us a lot ;)</span></p><p><br></p>', '2019-10-15 20:35:00', 'https://images.unsplash.com/photo-1519575706483-221027bfbb31?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjk2NDE2fQ', 'Photo by <a href=\"https://unsplash.com/@chillarea\" target=\"_blank\">sebastiaan stam</a> on <a href=\"https://unsplash.com\" target=\"_blank\">Unsplash</a>', '1', '{\"og_title\": null, \"twitter_title\": null, \"canonical_link\": null, \"og_description\": null, \"meta_description\": null, \"twitter_description\": null}', '2019-10-15 07:59:58', '2019-10-27 00:08:12', NULL, '1'),
('797d9d50-72f6-4525-8551-08cbfefc2938', 'browser-test-in-laravel-app', 'How to use Laravel Dusk to do browser test(continuously updating)', 'an easy way to do browser and unit test in Laravel app with a Laravel first party package-Laravel Dusk', '<p><br></p><h2><a href=\"https://laravel.com/docs/master/dusk\" target=\"_blank\">Laravel Dusk</a> is a first party package to <span class=\"hljs-keyword\">do</span> a unit(browser) <span class=\"hljs-built_in\">test</span>. </h2><p>a nice wrapper for PHP unit.</p><p>Install it with</p><pre class=\"ql-syntax\" spellcheck=\"false\"><span class=\"hljs-attr\">composer</span> <span class=\"hljs-string\">require --dev laravel/dusk</span>\r\n<span class=\"hljs-attr\">php</span> <span class=\"hljs-string\">artisan dusk:install</span>\r\n</pre><p><br></p><p>don\'t register in production environment so conditionally register in <code>app/Providers/AppServiceProvider.php</code></p><p><br></p><pre class=\"ql-syntax\" spellcheck=\"false\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">register</span><span class=\"hljs-params\">()</span>\r\n    </span>{\r\n        <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">$this</span>-&gt;app-&gt;environment([<span class=\"hljs-string\">\'local\'</span>, <span class=\"hljs-string\">\'test\'</span>])) {\r\n            <span class=\"hljs-keyword\">$this</span>-&gt;app-&gt;register(DuskServiceProvider::class);\r\n        }\r\n    }\r\n</pre><p>Test with </p><pre class=\"ql-syntax\" spellcheck=\"false\"><span class=\"hljs-attribute\">php</span> artisan dusk\r\n</pre><p><br></p><h2>Some example for Laravel dusk</h2><p><br></p><pre class=\"ql-syntax\" spellcheck=\"false\">        <span class=\"hljs-keyword\">$this</span>-&gt;browse(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-params\">(Browser $browser)</span> </span>{\r\n            $browser-&gt;loginAs(User::find(<span class=\"hljs-number\">1</span>))\r\n                    -&gt;visit(<span class=\"hljs-string\">\'/\'</span>)\r\n                    -&gt;assertSee(<span class=\"hljs-string\">\'HOME\'</span>);\r\n        });\r\n\r\n        <span class=\"hljs-keyword\">$this</span>-&gt;browse(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-params\">(Browser $browser)</span> </span>{\r\n            $browser-&gt;visit(<span class=\"hljs-string\">\'/\'</span>)\r\n                    -&gt;clickLink(<span class=\"hljs-string\">\'BLOG\'</span>)\r\n                    -&gt;waitFor(<span class=\"hljs-string\">\'.my-input\'</span>)\r\n                    -&gt;assertVisible(<span class=\"hljs-string\">\'.my-input\'</span>);\r\n        });\r\n\r\n        <span class=\"hljs-keyword\">$this</span>-&gt;browse(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-params\">(Browser $browser)</span> </span>{\r\n            $slug = Post::first()-&gt;slug;\r\n            $browser-&gt;visit(<span class=\"hljs-string\">\'/show/\'</span>.$slug)\r\n                    -&gt;waitFor(<span class=\"hljs-string\">\'.big-pic\'</span>)\r\n                    -&gt;assertVisible(<span class=\"hljs-string\">\'.big-pic\'</span>);\r\n        });\r\n</pre><p>if it fails with ran <code>php artisan dusk </code>, there will be a screenshot at <code>tests/Browser/screenshots</code>  folder.</p><p><span class=\"hljs-attribute\">For</span> multiple browses</p><pre class=\"ql-syntax\" spellcheck=\"false\"><span class=\"hljs-keyword\">$this</span>-&gt;browse(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-params\">($first, $second)</span> </span>{\r\n    $first-&gt;loginAs(User::find(<span class=\"hljs-number\">1</span>))\r\n          -&gt;visit(<span class=\"hljs-string\">\'/home\'</span>)\r\n          -&gt;waitForText(<span class=\"hljs-string\">\'Message\'</span>);\r\n\r\n    $second-&gt;loginAs(User::find(<span class=\"hljs-number\">2</span>))\r\n           -&gt;visit(<span class=\"hljs-string\">\'/home\'</span>)\r\n           -&gt;waitForText(<span class=\"hljs-string\">\'Message\'</span>)\r\n           -&gt;type(<span class=\"hljs-string\">\'message\'</span>, <span class=\"hljs-string\">\'Hey Taylor\'</span>)\r\n           -&gt;press(<span class=\"hljs-string\">\'Send\'</span>);\r\n\r\n    $first-&gt;waitForText(<span class=\"hljs-string\">\'Hey Taylor\'</span>)\r\n          -&gt;assertSee(<span class=\"hljs-string\">\'Jeffrey Way\'</span>);\r\n});\r\n</pre><h2>assert in page class</h2><p>In test case just call <code>assert() </code></p><pre class=\"ql-syntax\" spellcheck=\"false\"><span class=\"hljs-keyword\">$this</span>-&gt;browse(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-params\">(Browser $browser)</span> </span>{\r\n    $browser-&gt;loginAs(User::find(<span class=\"hljs-number\">1</span>))\r\n            -&gt;visit(<span class=\"hljs-keyword\">new</span> HomePage)\r\n            -&gt;assert();\r\n});\r\n</pre><p>assert detail in page </p><pre class=\"ql-syntax\" spellcheck=\"false\">public function url()\r\n{\r\n    return \'/\';\r\n}\r\n\r\npublic function assert(Browser $browser)\r\n{\r\n    $browser-&gt;assertSee(\'HOME\');\r\n</pre><p>}</p><p>There are so many useful methods that we can implement, I have to try them if possible.</p><p><br></p><p><span style=\"color: rgb(255, 255, 255);\">    }</span></p>', '2019-12-01 15:54:00', 'https://images.unsplash.com/photo-1497010184051-25b08385ab1d?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjk2NDE2fQ', 'Photo by <a href=\"https://unsplash.com/@jplenio\" target=\"_blank\">Johannes Plenio</a> on <a href=\"https://unsplash.com\" target=\"_blank\">Unsplash</a>', '1', '{\"og_title\": null, \"twitter_title\": null, \"canonical_link\": null, \"og_description\": null, \"meta_description\": null, \"twitter_description\": null}', '2019-12-01 16:00:49', '2020-01-01 18:57:47', NULL, '1'),
('92454cfe-7d35-426d-a744-57c40dadf93e', 'npm-create-a-brand-new-start', 'a npm commands learning memo and explanation of package.json', 'after this cheat sheet, you will never confused about npm commands 👯‍♀️', '<h2><br></h2><h2>Let\'s Create an example first !</h2><p><code>npm init</code></p><p><code>npm init -y</code></p><p><code>-y</code> means answer all questions yes.</p><p><code>npm install lodash --save</code></p><p><code>--save</code> means save to package.json.</p><p><code>npm install live-server --save-dev</code></p><p><code>npm install live-server -D</code></p><p><code>-D</code> is the shortcut of <code>—save-dev</code></p><p>would create a package.json like below.</p><pre class=\"ql-syntax\" spellcheck=\"false\">{\r\n    <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"npmapp\"</span>,\r\n    <span class=\"hljs-attr\">\"version\"</span>: <span class=\"hljs-string\">\"1.0.0\"</span>,\r\n    <span class=\"hljs-attr\">\"description\"</span>: <span class=\"hljs-string\">\"this is a npm test\"</span>,\r\n    <span class=\"hljs-attr\">\"main\"</span>: <span class=\"hljs-string\">\"index.js\"</span>,\r\n    <span class=\"hljs-attr\">\"scripts\"</span>: {\r\n        <span class=\"hljs-attr\">\"test\"</span>: <span class=\"hljs-string\">\"echo \\\"Error: no test specified\\\" &amp;&amp; exit 1\"</span>,\r\n        <span class=\"hljs-attr\">\"start\"</span>: <span class=\"hljs-string\">\"node index.js\"</span>,\r\n        <span class=\"hljs-attr\">\"dev\"</span>: <span class=\"hljs-string\">\"live-server\"</span>\r\n    },\r\n    <span class=\"hljs-attr\">\"keywords\"</span>: [\r\n        <span class=\"hljs-string\">\"npmTest\"</span>\r\n    ],\r\n    <span class=\"hljs-attr\">\"author\"</span>: <span class=\"hljs-string\">\"\"</span>,\r\n    <span class=\"hljs-attr\">\"license\"</span>: <span class=\"hljs-string\">\"MIT\"</span>,\r\n    <span class=\"hljs-attr\">\"dependencies\"</span>: {\r\n        <span class=\"hljs-attr\">\"lodash\"</span>: <span class=\"hljs-string\">\"^4.17.15\"</span>\r\n    },\r\n    <span class=\"hljs-attr\">\"devDependencies\"</span>: {\r\n        <span class=\"hljs-attr\">\"live-server\"</span>: <span class=\"hljs-string\">\"^1.2.1\"</span>\r\n    }\r\n}\r\n</pre><p><code>npm install</code> will install packages in <code class=\"hljs-string\">\"dependencies\"</code> and <code class=\"hljs-string\">\"devDependencies\"</code><span class=\"hljs-string\">.</span></p><p><code>npm install --production</code> will install packages in<span style=\"color: rgba(0, 0, 0, 0.9);\"> </span><code class=\"hljs-string\" style=\"background-color: rgb(240, 240, 240);\">\"dependencies\"</code><span class=\"hljs-string\" style=\"background-color: rgb(240, 240, 240);\">.</span></p><p><code>npm list --depth 0</code> will list the top layer libraries.</p><p><code>npm remove lodash</code> delete a package from <span style=\"color: rgba(0, 0, 0, 0.9);\">node_modules folder.</span></p><p><code>npm rm lodash --save</code> delete package and save deletion to package.json.</p><p><code>npm uninstall lodash</code> same with above.</p><p><br></p><h2>What does it mean in package.json? 😬</h2><p><code class=\"hljs-string\">\"lodash\"</code><code>: </code><code class=\"hljs-string\">\"^4.17.15\"</code></p><p><code>4</code> -&gt;major version-&gt;would break api.</p><p><code>17</code>-&gt;minor version-&gt;new features won\'t break api.</p><p><code>15</code>-&gt;patch version-&gt;bug fixes.</p><p><code>^</code> keep major version upgrade minor version.</p><p><code>~</code> <span style=\"color: rgba(0, 0, 0, 0.9);\">keep minor version upgrade patch version.</span></p><p><br></p><h2>Some other commands</h2><h3><br></h3><h3>INSTALL CERTAIN VERSIONS</h3><p><code>npm install lodash@4.17.3 --save</code></p><div class=\"inline_html\" contenteditable=\"false\"></div><h3><br></h3><h3>UPDATE</h3><p><code>npm update lodash --save</code></p><h3><br></h3><h3>INSTALL GLOBAL MODULE</h3><p><code>npm install -g nodemon</code></p><p><code>npm install -g live-server</code></p><h3><br></h3><h3>FIND ROOT FOLDER</h3><p><code>npm root -g</code></p><h3><br></h3><h3>REMOVE GLOBAL PACKAGES</h3><p><code>npm remove -g nodemon</code></p><h3><br></h3><h3>LISTING PACKAGES</h3><p><code>npm listnpm list --depth 0</code></p><p><code>npm list --depth 1</code></p><h3><br></h3><h3>INSTALL LIVE-SERVER LOCALLY</h3><p><code>npm install live-server --save-dev</code></p><h3><br></h3><h3>NPM SCRIPT</h3><pre class=\"ql-syntax\" spellcheck=\"false\"><span class=\"hljs-section\">scripts\": {    </span>\r\n  <span class=\"hljs-string\">\"start\"</span>: <span class=\"hljs-string\">\"node index.js\"</span>,    \r\n  <span class=\"hljs-string\">\"dev\"</span>: <span class=\"hljs-string\">\"live-server\"</span>  \r\n},\r\n</pre><p><code>npm start</code></p><p><code>npm run dev</code></p><p>to run these scripts.</p><p><br></p><h2><code>npx</code></h2><p>Since install some packages locally,  the path of these packages is ./.node_modules/bin/xxx. It\'s difficult to run these packages. Now we have<code> npx </code>!</p><pre class=\"ql-syntax\" spellcheck=\"false\">$ npm i -D webpack\r\n$ npx webpack ...\r\n</pre><p><br></p>', '2019-11-11 23:12:00', 'https://images.unsplash.com/photo-1543966888-7c1dc482a810?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjk2NDE2fQ', 'Photo by <a href=\"https://unsplash.com/@pinjasaur\" target=\"_blank\">Paul Esch-Laurent</a> on <a href=\"https://unsplash.com\" target=\"_blank\">Unsplash</a>', '1', '{\"og_title\": null, \"twitter_title\": null, \"canonical_link\": null, \"og_description\": null, \"meta_description\": \"Npm, Npx, JavaScript\", \"twitter_description\": null}', '2019-11-11 23:25:16', '2019-11-14 14:17:19', NULL, '1'),
('9e99fe7e-0894-4979-8221-866c3c7625fd', 'the-first-step-to-docker', 'The first step to docker, a learning memo', 'These days docker becomes a necessary skill for every developer. This is a docker-learning memo for myself.', '<h1><strong class=\"hljs-attr\">Docker Basic Commands, Help &amp; Tips</strong></h1><p><br></p><p><strong>Docker version info</strong></p><p><br></p><pre class=\"ql-syntax\" spellcheck=\"false\">𝛴 docker version\r\n</pre><h3><br></h3><h3><span class=\"hljs-keyword\">Show</span> info <span class=\"hljs-keyword\">like</span> <span class=\"hljs-built_in\">number</span> <span class=\"hljs-keyword\">of</span> containers, etc</h3><p><br></p><pre class=\"ql-syntax\" spellcheck=\"false\">𝛴 docker info\r\n</pre><h3><br></h3><h3>Pull an image down to <span class=\"hljs-keyword\">our</span> machine <span class=\"hljs-keyword\">and</span> won<span class=\"hljs-string\">\'t create container.</span></h3><p><br></p><pre class=\"ql-syntax\" spellcheck=\"false\">𝛴 docker pull nginx\r\n</pre><h3><br></h3><h3>run&nbsp;nginx&nbsp;<span class=\"hljs-keyword\">in</span> the background.</h3><p><br></p><p><code style=\"background-color: rgb(238, 238, 238); color: rgb(74, 74, 74);\">-d</code>&nbsp;or&nbsp;<code style=\"background-color: rgb(238, 238, 238); color: rgb(74, 74, 74);\">--detached</code>&nbsp;means Detached mode</p><p><br></p><p>if changes -d to -it, run container in foreground</p><blockquote>means that a Docker container runs in the background of your terminal. It does not receive input or display output. If you run containers in the background, you can find out their details using docker ps and then reattach your terminal to its input and output.</blockquote><p><code style=\"background-color: rgb(238, 238, 238); color: rgb(74, 74, 74);\">-p</code>&nbsp;means map a port</p><p><code style=\"background-color: rgb(238, 238, 238); color: rgb(74, 74, 74);\">8080:80</code>&nbsp;<code style=\"background-color: rgb(238, 238, 238); color: rgb(74, 74, 74);\">8080</code>&nbsp;for the local machine,&nbsp;<code style=\"background-color: rgb(238, 238, 238); color: rgb(74, 74, 74);\">80</code>&nbsp;for container</p><p><code style=\"background-color: rgb(238, 238, 238); color: rgb(74, 74, 74);\">--name</code>&nbsp;mynginx a name</p><p>nginx image name itself</p><p><br></p><pre class=\"ql-syntax\" spellcheck=\"false\">𝛴 docker container run -d -p 8080:80 --name mynginx nginx\r\n</pre><p><br></p><p>Another example will be&nbsp;<a href=\"https://hub.docker.com/_/httpd\" target=\"_blank\" style=\"color: rgb(98, 0, 172);\">Apache</a>, use 8081 port cause Nginx is using 8080.</p><p><br></p><pre class=\"ql-syntax\" spellcheck=\"false\">𝛴 docker container run -d -p 8081:80 --name myapache httpd\r\n</pre><p><br></p><p>An example with&nbsp;<a href=\"https://hub.docker.com/_/mysql\" target=\"_blank\" style=\"color: rgb(98, 0, 172);\">MySQL</a>&nbsp;which using environment variable.</p><p><br></p><pre class=\"ql-syntax\" spellcheck=\"false\">𝛴 docker container run -d -p 3306:3306 <span class=\"hljs-comment\">--name mysql --env MYSQL_ROOT_PASSWORD=123456 mysql</span>\r\n</pre><p><br></p><p>remove, force remove container, remove all containers</p><p><br></p><pre class=\"ql-syntax\" spellcheck=\"false\">𝛴 docker container rm myapache\r\n𝛴 docker container rm myapache -f\r\n𝛴 docker stop $(docker ps -aq)\r\n</pre><p><br></p><p>Create a local filesystem root to container</p><p><br></p><pre class=\"ql-syntax\" spellcheck=\"false\">𝛴 docker container run -d -p <span class=\"hljs-number\">8080</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">80</span> -v $(pwd)<span class=\"hljs-symbol\">:/usr/share/nginx/html</span> --name nginx-website nginx\r\n</pre><p><br></p><p>Now create an index.html to override it, then create a Dockerfile.</p><p><br></p><p>Dockfile</p><p><br></p><pre class=\"ql-syntax\" spellcheck=\"false\"><span class=\"hljs-attr\">FROM</span> <span class=\"hljs-string\">nginx:latestz</span>\r\n<span class=\"hljs-attr\">WORKDIR</span> <span class=\"hljs-string\">/usr/share/nginx/html</span>\r\n<span class=\"hljs-attr\">COPY</span> <span class=\"hljs-string\">. .</span>\r\n</pre><h3><br></h3><h3><strong>Build image from dockerfile (reponame can be whatever)</strong></h3><p>docker image build -t keidarcy/nginx-website .</p><p><br></p><p>remove this container create from my image again.</p><p><br></p><pre class=\"ql-syntax\" spellcheck=\"false\">𝛴 docker container run -d -p 8082:80 keidarcy/nginx-website\r\n</pre><h3><br></h3><h3><strong>Push to dockerhub account</strong></h3><p><br></p><pre class=\"ql-syntax\" spellcheck=\"false\">𝛴 docker <span class=\"hljs-keyword\">push</span> keidarcy/nginx-website\r\n</pre><p><br></p><p>Next it\'s able to pull this image, build something on this image.</p><p><br></p>', '2019-10-22 06:08:00', 'https://images.unsplash.com/photo-1568430462989-44163eb1752f?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjk2NDE2fQ', 'Photo by <a href=\"https://unsplash.com/@toddcravens\" target=\"_blank\">Todd Cravens</a> on <a href=\"https://unsplash.com\" target=\"_blank\">Unsplash</a>', '1', '{\"og_title\": null, \"twitter_title\": null, \"canonical_link\": null, \"og_description\": null, \"meta_description\": null, \"twitter_description\": null}', '2019-10-22 07:33:47', '2019-10-26 23:54:30', NULL, '1'),
('b42a78de-9752-48af-ae5a-7ce4e1a76799', 'squash-several-commits-together-when-you-confuse', 'How to squash many commits together by git when you confuse with many commits', 'How to squash many commits together by git when you confuse with many commits', '<p>Simply there are two ways to finish this task.</p><p><br></p><ul><li><code style=\"background-color: rgb(238, 238, 238); color: rgb(74, 74, 74);\">git rebase</code></li><li><code style=\"background-color: rgb(238, 238, 238); color: rgb(74, 74, 74);\">git reset</code></li></ul><p><br></p><h2><strong>solution with&nbsp;</strong><code style=\"background-color: rgb(238, 238, 238); color: rgb(74, 74, 74);\"><strong>git rebase</strong></code></h2><p><br></p><p>For example, if the user wishes to view 5 commits from the current HEAD in the past the command is</p><p><br></p><pre class=\"ql-syntax\" spellcheck=\"false\">𝛴 git rebase -i HEAD~3\r\n</pre><p><br></p><p>without a number, go to log to check SHA1.</p><p><br></p><pre class=\"ql-syntax\" spellcheck=\"false\">𝛴 git <span class=\"hljs-built_in\">log</span> --oneline\r\n</pre><p><br></p><p><code style=\"background-color: rgb(238, 238, 238); color: rgb(74, 74, 74);\">--oneline</code>&nbsp;will make log easy to read.</p><p><br></p><p>pick the SHA1 of the oldest commit you want to squash.</p><p><br></p><pre class=\"ql-syntax\" spellcheck=\"false\">𝛴 git rebase -i 345678\r\n</pre><p><br></p><p>Then get into interactive mode.</p><p><br></p><pre class=\"ql-syntax\" spellcheck=\"false\"><span class=\"hljs-attr\">pick</span> <span class=\"hljs-string\">123456 a</span>\r\n<span class=\"hljs-attr\">pick</span> <span class=\"hljs-string\">234567 b</span>\r\n<span class=\"hljs-attr\">pick</span> <span class=\"hljs-string\">345678 c</span>\r\n<span class=\"hljs-comment\">\r\n# Rebase 123456..345678 onto 456789</span>\r\n<span class=\"hljs-comment\">#</span>\r\n<span class=\"hljs-comment\"># Commands:</span>\r\n<span class=\"hljs-comment\">#  p, pick = use commit</span>\r\n<span class=\"hljs-comment\">#  r, reword = use commit, but edit the commit message</span>\r\n<span class=\"hljs-comment\">#  e, edit = use commit, but stop for amending</span>\r\n<span class=\"hljs-comment\">#  s, squash = use commit, but meld into previous commit</span>\r\n<span class=\"hljs-comment\">#  f, fixup = like \"squash\", but discard this commit\'s log message</span>\r\n<span class=\"hljs-comment\">#</span>\r\n<span class=\"hljs-comment\"># If you remove a line here THAT COMMIT WILL BE LOST.</span>\r\n<span class=\"hljs-comment\"># However, if you remove everything, the rebase will be aborted.</span>\r\n<span class=\"hljs-comment\">#</span>\r\n</pre><p><br></p><p>edit top of this part like below.</p><p><br></p><pre class=\"ql-syntax\" spellcheck=\"false\"><span class=\"hljs-attr\">squash</span> <span class=\"hljs-string\">123456 a</span>\r\n<span class=\"hljs-attr\">squash</span> <span class=\"hljs-string\">234567 b</span>\r\n<span class=\"hljs-attr\">pick</span> <span class=\"hljs-string\">345678 c</span>\r\n</pre><p><br></p><p><code style=\"background-color: rgb(238, 238, 238); color: rgb(74, 74, 74);\">:wq</code>&nbsp;save and quit</p><p><br></p><p>get another editor.</p><p><br></p><pre class=\"ql-syntax\" spellcheck=\"false\"><span class=\"hljs-comment\"># This is a combination of 3 commits.</span>\r\n<span class=\"hljs-comment\"># The first commit\'s message is:</span>\r\n<span class=\"hljs-attribute\">a</span>\r\n<span class=\"hljs-comment\"># This is the 2nd commit message:</span>\r\nb\r\n<span class=\"hljs-comment\"># This is the 3rd commit message:</span>\r\nc\r\n</pre><p><br></p><p><code style=\"background-color: rgb(238, 238, 238); color: rgb(74, 74, 74);\">:wq</code>&nbsp;save and quit editor.</p><p><br></p><p>and log, it should become cleaner.</p><p>as the first interactive mode shows, there are tons of things, we can do with git rebase. Maybe explore in the future😸.</p><p><br></p><h2><strong>solution with&nbsp;</strong><code style=\"background-color: rgb(238, 238, 238); color: rgb(74, 74, 74);\"><strong>git reset</strong></code></h2><p><br></p><pre class=\"ql-syntax\" spellcheck=\"false\">𝛴 git <span class=\"hljs-keyword\">reset</span> <span class=\"hljs-comment\">--soft HEAD~1</span>\r\n</pre><p><br></p><p>Assuming ~n is the number of commits to softly un-commit (i.e. ~1, ~2,...), or like before give a SHA1 with a simple git log.</p><p><br></p><pre class=\"ql-syntax\" spellcheck=\"false\">𝛴 git <span class=\"hljs-keyword\">commit</span> <span class=\"hljs-comment\">--amend</span>\r\n</pre><p><br></p><p>which is pretty much the same as a long-range of squash and one pick.</p>', '2019-10-26 23:28:00', 'https://images.unsplash.com/photo-1566241440091-ec10de8db2e1?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjk2NDE2fQ', 'Photo by <a href=\"https://unsplash.com/@lukechesser\" target=\"_blank\">Luke Chesser</a> on <a href=\"https://unsplash.com\" target=\"_blank\">Unsplash</a>', '1', '{\"og_title\": null, \"twitter_title\": null, \"canonical_link\": null, \"og_description\": null, \"meta_description\": null, \"twitter_description\": null}', '2019-10-26 23:36:13', '2019-12-01 12:58:29', NULL, '1'),
('b4fa7c31-2a64-44a8-8bac-424f655336da', 'the-truth-with-import-vue-from-vue', '本当のimport Vue from \'vue\'を研究して、分かってきたもの', 'Why we can use import vue from vue? It\'s not a relative path obviously, how can we use it? Here it is!', '<h1><strong>import Vue from \'vue\'はなぜ使えるか？</strong></h1><p>Vuejsの開発の際、よく最初に出てくるこれ</p><p><br></p><pre class=\"ql-syntax\" spellcheck=\"false\">import Vue from \'vue\';\r\n</pre><p>下のような相対パスなどはまだわかりやすいけど、</p><pre class=\"ql-syntax\" spellcheck=\"false\">import Example from \'./Example.vue\';\r\n</pre><p><code style=\"background-color: rgb(238, 238, 238); color: rgb(74, 74, 74);\">vue</code>はなず<code style=\"background-color: rgb(238, 238, 238); color: rgb(74, 74, 74);\">import</code>できるのか、みんな様こんな疑問はないのか。</p><p>もしかして俺一人の疑問かも😣</p><p>少し研究してきたことをまとめてみた。</p><h2><strong>importとは</strong></h2><p>Javascriptのモジュールシステムです。他のファイルを使いたい時、<code style=\"background-color: rgb(238, 238, 238); color: rgb(74, 74, 74);\">require</code>&nbsp;functionで他のファイルの内容を引用する。</p><p><code style=\"background-color: rgb(238, 238, 238); color: rgb(74, 74, 74);\">es6</code>を使っている時、<code style=\"background-color: rgb(238, 238, 238); color: rgb(74, 74, 74);\">import</code>を<code style=\"background-color: rgb(238, 238, 238); color: rgb(74, 74, 74);\">require</code>にコンパイルする。</p><p>だから、実際に実行するコードは以下。</p><pre class=\"ql-syntax\" spellcheck=\"false\">import Vue from \'vue\';\r\n⬇️\r\nconst Vue = require(\'vue\')\r\n</pre><h2><strong>nodejs引用ルール</strong></h2><p>実は、nodejsの中に、<code style=\"background-color: rgb(238, 238, 238); color: rgb(74, 74, 74);\">require</code>を使う時に、<code style=\"background-color: rgb(238, 238, 238); color: rgb(74, 74, 74);\">require.reslove</code>&nbsp;functionを使ってファイルのパスを探している。このfunctionは優先順位は以下になる。</p><p><code style=\"background-color: rgb(238, 238, 238); color: rgb(74, 74, 74);\">require(X) from module at path Y</code></p><p>1.もし<code style=\"background-color: rgb(238, 238, 238); color: rgb(74, 74, 74);\">X</code>はコアのパッケージかどうか、普段の<code style=\"background-color: rgb(238, 238, 238); color: rgb(74, 74, 74);\">path</code>などみたいは直接引用される。ではなければ、次へ。</p><p>2.もし<code style=\"background-color: rgb(238, 238, 238); color: rgb(74, 74, 74);\">X</code>は<code style=\"background-color: rgb(238, 238, 238); color: rgb(74, 74, 74);\">/</code>から始めれば、<code style=\"background-color: rgb(238, 238, 238); color: rgb(74, 74, 74);\">Y</code>のパスはOSの<code style=\"background-color: rgb(238, 238, 238); color: rgb(74, 74, 74);\">root</code>と設定。ではなければ、次へ。</p><p>3.もし<code style=\"background-color: rgb(238, 238, 238); color: rgb(74, 74, 74);\">X</code>は<code style=\"background-color: rgb(238, 238, 238); color: rgb(74, 74, 74);\">./</code>,<code style=\"background-color: rgb(238, 238, 238); color: rgb(74, 74, 74);\">/</code>,<code style=\"background-color: rgb(238, 238, 238); color: rgb(74, 74, 74);\">../</code>から始めれば、<code style=\"background-color: rgb(238, 238, 238); color: rgb(74, 74, 74);\">(Y + X)</code>ファイルかディレクトリ引用。ではなければ、次へ。</p><p>4.<code style=\"background-color: rgb(238, 238, 238); color: rgb(74, 74, 74);\">node_modules</code>フォルダの中に、見つかる！</p><h2><strong>node_modulesにあるvue</strong></h2><p><code style=\"background-color: rgb(238, 238, 238); color: rgb(74, 74, 74);\">node_modules</code>に確かに<code style=\"background-color: rgb(238, 238, 238); color: rgb(74, 74, 74);\">vue</code>というフォルダは存在しているが、<code style=\"background-color: rgb(238, 238, 238); color: rgb(74, 74, 74);\">new Vue()</code>などの操作の時は、JsのObjectとして使っている。では、なぜか！</p><p>真の犯人まではもう少し🎭❗️</p><p><code style=\"background-color: rgb(238, 238, 238); color: rgb(74, 74, 74);\">npm</code>のパッケージとして、内部の出力はまたルールがある！</p><p>まずは、<code style=\"background-color: rgb(238, 238, 238); color: rgb(74, 74, 74);\">node_modules/vue</code>のディレクトリツリーを見てみる。</p><pre class=\"ql-syntax\" spellcheck=\"false\">├── LICENSE\r\n├── README.md\r\n├── dist\r\n├── package.json\r\n├── src\r\n└── types\r\n</pre><p>ルールは以下になる。</p><p>1.<code style=\"background-color: rgb(238, 238, 238); color: rgb(74, 74, 74);\">package.json</code>に<code style=\"background-color: rgb(238, 238, 238); color: rgb(74, 74, 74);\">main</code>が定義されたら、<code style=\"background-color: rgb(238, 238, 238); color: rgb(74, 74, 74);\">main</code>に入り口を探す。</p><p>2.<code style=\"background-color: rgb(238, 238, 238); color: rgb(74, 74, 74);\">package.json</code>がなければ、<code style=\"background-color: rgb(238, 238, 238); color: rgb(74, 74, 74);\">index.js</code>か<code style=\"background-color: rgb(238, 238, 238); color: rgb(74, 74, 74);\">index.node</code>を読む。</p><p>3.どちらもなければ、<code style=\"background-color: rgb(238, 238, 238); color: rgb(74, 74, 74);\">Error: Cannot find module \'some-library\'</code>を投げる。</p><p>では、<code style=\"background-color: rgb(238, 238, 238); color: rgb(74, 74, 74);\">node_modules/vue/packeage.json</code>こう書いてある❗️</p><pre class=\"ql-syntax\" spellcheck=\"false\">  ...\r\n  \"main\": \"dist/vue.runtime.common.js\",\r\n  ...\r\n</pre><p>ではでは、だんだん明らかになってきた❗️</p><p><br></p><h2><strong>本当にいつも</strong><code style=\"background-color: rgb(238, 238, 238); color: rgb(74, 74, 74);\"><strong>import</strong></code><strong>したものは...</strong></h2><pre class=\"ql-syntax\" spellcheck=\"false\">import vue from \'vue\';\r\n\r\n// 実は、これに変換する\r\nconst vue = require(\'./node_modules/vue/dist/vue.runtime.common.js\');\r\n</pre><p>その内容は</p><p><br></p><pre class=\"ql-syntax\" spellcheck=\"false\">if (process.env.NODE_ENV === \'production\') {\r\n  module.exports = require(\'./vue.runtime.common.prod.js\')\r\n} else {\r\n  module.exports = require(\'./vue.runtime.common.dev.js\')\r\n}\r\n</pre><p>これは普段<code style=\"background-color: rgb(238, 238, 238); color: rgb(74, 74, 74);\">npm</code>のスクリプトにある<code style=\"background-color: rgb(238, 238, 238); color: rgb(74, 74, 74);\">NODE_ENV=development</code>を読んで、実行環境に応じて違う<code style=\"background-color: rgb(238, 238, 238); color: rgb(74, 74, 74);\">vue</code>インスタンスの<code style=\"background-color: rgb(238, 238, 238); color: rgb(74, 74, 74);\">export</code>ができるようになった💥</p><p><br></p><p>今回の<code style=\"background-color: rgb(238, 238, 238); color: rgb(74, 74, 74);\">import</code>ルールや他にも今回出てなかったルールの詳細は<a href=\"https://nodejs.org/api/modules.html#modules_all_together\" target=\"_blank\" style=\"color: rgb(98, 0, 172);\">nodejs</a>のドキュメントに🤓</p>', '2020-01-12 17:26:00', 'https://images.unsplash.com/photo-1535572290543-960a8046f5af?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjk2NDE2fQ', 'Photo by <a href=\"https://unsplash.com/@shs521\" target=\"_blank\">Susan Holt Simpson</a> on <a href=\"https://unsplash.com\" target=\"_blank\">Unsplash</a>', '1', '{\"og_title\": null, \"twitter_title\": null, \"canonical_link\": null, \"og_description\": null, \"meta_description\": null, \"twitter_description\": null}', '2020-01-12 17:30:53', '2020-01-12 17:30:53', NULL, '1'),
('beb55236-64a4-4ab4-95f4-9e4efc15a0fa', 'my-git-aliases-list-rebasing-tips', 'my git aliases list, amending, rebasing, interactive rebasing, and some git tips', 'my aliases list in .zshrc and some helpful tips for masting git like interactive rebasing 🦾', '<h2><strong>Fixing and amending commits</strong></h2><p><code style=\"color: rgb(85, 85, 85);\">git commit -m \'some message\'</code></p><p>realize a typo, fix it, then</p><p><code style=\"color: rgb(85, 85, 85);\">git add . &amp;&amp; git commit --amend</code></p><p>it wouldn\'t commit again but fix first commit!</p><h2><strong>Add git aliases</strong></h2><pre class=\"ql-syntax\" spellcheck=\"false\"><span class=\"hljs-comment\"># ~/.aliases</span>\r\n\r\n<span class=\"hljs-comment\"># Git Stuff</span>\r\nalias ga=<span class=\"hljs-string\">\"git add\"</span>\r\nalias gaa=<span class=\"hljs-string\">\"git add .\"</span>\r\nalias gc=<span class=\"hljs-string\">\"git commit -m \"</span>\r\nalias gp=<span class=\"hljs-string\">\"git push\"</span>\r\nalias gs=<span class=\"hljs-string\">\"git status\"</span>\r\nalias nah=<span class=\"hljs-string\">\"git reset --hard;git clean -df;\"</span>\r\nalias gll=<span class=\"hljs-string\">\"git log --color --graph --pretty=format:\'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&lt;%an&gt;%Creset\' --abbrev-commit --\"</span>\r\n</pre><p>In bash</p><pre class=\"ql-syntax\" spellcheck=\"false\"><span class=\"hljs-comment\">#.bashrc:</span>\r\n\r\n<span class=\"hljs-keyword\">if</span> [ -f ~/.aliases ]; <span class=\"hljs-keyword\">then</span>\r\n    . ~/.aliases\r\n<span class=\"hljs-keyword\">fi</span>\r\n</pre><p>In zsh</p><pre class=\"ql-syntax\" spellcheck=\"false\"><span class=\"hljs-comment\">#.zshrc:</span>\r\n\r\n<span class=\"hljs-built_in\">source</span> <span class=\"hljs-variable\">$HOME</span>/.aliases\r\n</pre><p>if Zsh tell you,&nbsp;<code style=\"color: rgb(85, 85, 85);\">bad assignment</code>, probably means there should not be any space between \'=\', like&nbsp;</p><p><code style=\"color: rgb(85, 85, 85);\">alias ga = \"git add\"</code>❌</p><p><code style=\"color: rgb(85, 85, 85);\">alias ga=\"git add\"</code>✅</p><h2><strong>rebasing</strong></h2><p>bring all you commits on the top of master branch</p><pre class=\"ql-syntax\" spellcheck=\"false\">  <span class=\"hljs-attribute\">git</span> rebase master\r\n</pre><p>rebase all the commits for the master branch</p><h2><strong>interactive rebasing</strong></h2><p><code style=\"color: rgb(85, 85, 85);\">git rebase -i</code></p><p><code style=\"color: rgb(85, 85, 85);\">r</code>or<code style=\"color: rgb(85, 85, 85);\">reword</code>&nbsp;means rename the commit.</p><p><code style=\"color: rgb(85, 85, 85);\">s</code>or&nbsp;<code style=\"color: rgb(85, 85, 85);\">squash</code>&nbsp;means squash commit together.</p><p>then&nbsp;<code style=\"color: rgb(85, 85, 85);\">esc : q</code></p><p>comfirm with rename or&nbsp;<code style=\"color: rgb(85, 85, 85);\">esc : q</code></p><h2><strong>git reflog</strong></h2><p>if you want to \'reset\' a wrong \'interactive rebasing\' go<code style=\"color: rgb(85, 85, 85);\">git reflog</code>&nbsp;!</p><p>it would show all changes\' sha1 that you can pick and&nbsp;<code style=\"color: rgb(85, 85, 85);\">git rebase --hard sha1</code>&nbsp;.&nbsp;</p><h2><strong>some additional git tips</strong></h2><p>git branch -v</p><pre class=\"ql-syntax\" spellcheck=\"false\">* develop 93dcd21 adj\r\n  master  06c7e78 Merge branch <span class=\"hljs-string\">\'develop\'</span>\r\n</pre><p>When in list mode, show sha1 and commit subject line for each head</p><p><code style=\"color: rgb(85, 85, 85);\">git reset --hard origin/develop</code></p><p>set repo to the latest version</p><p><code style=\"color: rgb(85, 85, 85);\">git reset --hard HEAD^</code></p><p>reset repo to the last commit</p><p><br></p><h2><strong>git grep \'normal grep search\'</strong></h2><p><br></p><p>search a pattern in repo by grep command</p><h2><br></h2><h2><strong>git commit --amend --reset-author</strong></h2><h2><br></h2><p>change author of git commit</p><p><br></p><h2>git blame \'path of a file\'</h2><p><br></p><p>find out commit history of a specific file</p><p><br></p>', '2019-12-29 15:27:00', 'https://images.unsplash.com/photo-1551617489-25aa9b1053c3?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjk2NDE2fQ', 'Photo by <a href=\"https://unsplash.com/@tlmn\" target=\"_blank\">Til Man</a> on <a href=\"https://unsplash.com\" target=\"_blank\">Unsplash</a>', '1', '{\"og_title\": null, \"twitter_title\": null, \"canonical_link\": null, \"og_description\": null, \"meta_description\": null, \"twitter_description\": null}', '2019-12-29 15:29:44', '2020-02-02 23:06:41', NULL, '1'),
('c1f09c2d-ce00-437f-83b3-c68502ba0c02', 'learn-to-collection-make-a-day', 'Understand Laravel Core Concepts 3 (how collection help us)', 'this is a Laravel base source explains series. Collection gave us so many useful methods, let\'s learn a little bit', '<h2><strong>Create our own collection from scratch</strong></h2><p>The&nbsp;<code style=\"color: rgb(85, 85, 85);\">Illuminate\\Support\\Collection</code>&nbsp;class which is warp of array to helps us manipulate array!</p><p>use&nbsp;<code style=\"color: rgb(85, 85, 85);\">collect()</code>&nbsp;helper function to create collection.</p><pre class=\"ql-syntax\" spellcheck=\"false\">&gt;&gt;&gt; $items = collect([range(1,10)])-&gt;flatten();\r\n=&gt; Illuminate\\Support\\Collection {#3314\r\n     all: [\r\n       1,\r\n       2,\r\n       3,\r\n       4,\r\n       5,\r\n       6,\r\n       7,\r\n       8,\r\n       9,\r\n       10,\r\n     ],\r\n   }\r\n</pre><p>seems normal ?</p><pre class=\"ql-syntax\" spellcheck=\"false\">&gt;&gt;&gt; $items-&gt;filter(function($item){ return $item &gt; 5 ;});\r\n=&gt; Illuminate\\Support\\Collection {#3312\r\n     all: [\r\n       5 =&gt; 6,\r\n       6 =&gt; 7,\r\n       7 =&gt; 8,\r\n       8 =&gt; 9,\r\n       9 =&gt; 10,\r\n     ],\r\n   }\r\n   \r\n&gt;&gt;&gt; $items-&gt;filter(function($item){ return $item &gt; 5 ;})-&gt;map(function($item){return $item*3;});\r\n=&gt; Illuminate\\Support\\Collection {#3325\r\n     all: [\r\n       5 =&gt; 18,\r\n       6 =&gt; 21,\r\n       7 =&gt; 24,\r\n       8 =&gt; 27,\r\n       9 =&gt; 30,\r\n     ],\r\n   }\r\n   \r\n&gt;&gt;&gt; $items-&gt;filter(function($item){ return $item &gt; 5 ;})-&gt;map(function($item){return $item*3;})-&gt;reject(function($item){return $item % 2 == 0;});\r\n=&gt; Illuminate\\Support\\Collection {#3336\r\n     all: [\r\n       6 =&gt; 21,\r\n       8 =&gt; 27,\r\n     ],\r\n   }\r\n</pre><p>how powerful!</p><h2><strong>Explore some real examples!</strong></h2><p>these two will get same array 😳😳😳</p><pre class=\"ql-syntax\" spellcheck=\"false\">$tags = Post::with(\'tags\')-&gt;get()-&gt;pluck(\'tags\')-&gt;flatten()-&gt;pluck(\'name\');\r\n        $topics = Post::with(\'topic\')-&gt;get()-&gt;pluck(\'topic\')-&gt;flatten()-&gt;pluck(\'name\');\r\n\r\n        return [\'topicName\' =&gt; $topics-&gt;countBy()-&gt;keys(),\r\n                \'topicNumber\' =&gt; $topics-&gt;countBy()-&gt;values(),\r\n                \'tagName\' =&gt; $tags-&gt;countBy()-&gt;keys(),\r\n                \'tagNumber\' =&gt; $tags-&gt;countBy()-&gt;values()];\r\n$posts = Post::all();\r\n$tags = [];\r\nforeach ($posts as $post) {\r\n    foreach ($post-&gt;tags as $postTag) {\r\n        $tags[] = $postTag-&gt;name;\r\n    }\r\n}\r\n$topics = [];\r\nforeach ($posts as $post) {\r\n    foreach ($post-&gt;topic as $postTopic) {\r\n        $topics[] = $postTopic-&gt;name;\r\n    }\r\n}\r\n$topicName = [];\r\n$topicNumber = [];\r\nforeach (array_count_values((array)$topics) as $index =&gt; $topic) {\r\n    $topicNumber[] = $topic;\r\n    $topicName[] = $index;\r\n}\r\n\r\n$tagName = [];\r\n$tagNumber = [];\r\nforeach (array_count_values($tags) as $index =&gt; $tag) {\r\n    $tagNumber[] = $tag;\r\n    $tagName[] = $index;\r\n}\r\n\r\nreturn [\'topicName\' =&gt; $topicName,\r\n        \'topicNumber\' =&gt; $topicNumber,\r\n        \'tagName\' =&gt; $tagName,\r\n        \'tagNumber\' =&gt; $tagNumber];\r\n             \r\n</pre><h2><strong>Functionally Group By time using Collection and Carbon</strong></h2><p>How to get posts group by \'today\', \'this week\', \'last week\', \'old\' ?</p><pre class=\"ql-syntax\" spellcheck=\"false\">$posts = Post::latest()-&gt;get()-&gt;groupBy(function ($post) {\r\n    if ($post-&gt;created_at-&gt;isToday()) {\r\n        return \'today\';\r\n    } elseif ($post-&gt;created_at-&gt;isCurrentWeek()) {\r\n        return \'this week\';\r\n    } elseif ($post-&gt;created_at-&gt;isCurrentMonth()) {\r\n        return \'last week\';\r\n    } else {\r\n        return \'old\';\r\n    }\r\n});\r\n</pre><h2><strong>New Lazy Collection</strong></h2><p>Collection warp array, however Lazy Collection warp \'generator\'.</p><p><a href=\"https://www.php.net/manual/en/class.generator.php\" target=\"_blank\" style=\"color: rgb(24, 99, 161);\">PHP generator</a>&nbsp;is kinda difficult to understand which is useful when you deal with huge huge number of data that would eat all your memory.</p><h4><strong>how to use lazy collection ?</strong></h4><p>instead of use&nbsp;<code style=\"color: rgb(85, 85, 85);\">all()</code>&nbsp;use&nbsp;<code style=\"color: rgb(85, 85, 85);\">cursor</code></p><pre class=\"ql-syntax\" spellcheck=\"false\">\\App\\Project::all();\r\n\\App\\Project::cursor();\r\n$items = range(1,10000000);\r\nreturn \'done\';\r\n</pre><p>it will fail, since use out of memory.</p><pre class=\"ql-syntax\" spellcheck=\"false\">function customRange($begin, $end)\r\n{\r\n for ($i = $begin; $i &lt;= $end; $i++) {\r\n yield $i;\r\n }\r\n}\r\n\r\nforeach(customRange(1,10000000) as $i {\r\n    if ($i &lt; 10000) {\r\n    dump($i);\r\n    }\r\n}\r\n\r\n</pre><p>it won\'t build that array in memory, so it becomes possible.</p><p><br></p>', '2020-01-01 12:26:00', 'https://images.unsplash.com/photo-1515281239448-2abe329fe5e5?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjk2NDE2fQ', 'Photo by <a href=\"https://unsplash.com/@bright\" target=\"_blank\">Karen Vardazaryan</a> on <a href=\"https://unsplash.com\" target=\"_blank\">Unsplash</a>', '1', '{\"og_title\": null, \"twitter_title\": null, \"canonical_link\": null, \"og_description\": null, \"meta_description\": null, \"twitter_description\": null}', '2020-01-01 12:35:30', '2020-01-01 12:35:30', NULL, '1'),
('c8650163-54f6-4366-a5be-53b314ec7703', 'laravel-check-enviroment-and-conditionally-loading-provider', 'Laravel check environment and Conditionally Loading Service Providers', 'Detect a Laravel application environment and the usage of conditionally loading service provider', '<h1><strong>Laravel check environment</strong></h1><p><br></p><pre class=\"ql-syntax\" spellcheck=\"false\"><span class=\"hljs-meta\">&lt;?php</span>\r\n<span class=\"hljs-keyword\">if</span> (App::environment(<span class=\"hljs-string\">\'local\'</span>)) {\r\n    <span class=\"hljs-comment\">// The environment is local</span>\r\n}\r\n<span class=\"hljs-keyword\">if</span> (App::environment([<span class=\"hljs-string\">\'local\'</span>, <span class=\"hljs-string\">\'staging\'</span>])) {\r\n    <span class=\"hljs-comment\">// The environment is either local OR staging...</span>\r\n}\r\n<span class=\"hljs-comment\">// or using the \'app\' helper</span>\r\n<span class=\"hljs-keyword\">if</span> (app()-&gt;environment(<span class=\"hljs-string\">\'local\'</span>)) {\r\n    <span class=\"hljs-comment\">// The environment is local</span>\r\n}\r\n<span class=\"hljs-keyword\">if</span> (app()-&gt;environment([<span class=\"hljs-string\">\'local\'</span>, <span class=\"hljs-string\">\'staging\'</span>])) {\r\n    <span class=\"hljs-comment\">// The environment is either local OR staging...</span>\r\n}\r\n</pre><p>or&nbsp;</p><p>The env function retrieves the value of an environment variable or returns a default value:</p><pre class=\"ql-syntax\" spellcheck=\"false\">$env = env(<span class=\"hljs-string\">\'APP_ENV\'</span>);\r\n\r\n<span class=\"hljs-regexp\">//</span> Returns <span class=\"hljs-string\">\'production\'</span> <span class=\"hljs-keyword\">if</span> APP_ENV is <span class=\"hljs-keyword\">not</span> set...\r\n$env = env(<span class=\"hljs-string\">\'APP_ENV\'</span>, <span class=\"hljs-string\">\'production\'</span>);\r\n</pre><h2><br></h2><h2><strong>When we want to register a provider in a local not production environment, it\'s useful</strong></h2><h3><br></h3><h3><strong>Loading service providers normally</strong></h3><p><br></p><p>defining normal (non-environment-specific) Service Providers happens in&nbsp;<code style=\"color: rgb(85, 85, 85);\">/config/app.php</code>.</p><pre class=\"ql-syntax\" spellcheck=\"false\"><span class=\"hljs-string\">\'providers\'</span> =&gt; [\r\n\r\n        <span class=\"hljs-comment\">/*\r\n         * Laravel Framework Service Providers...\r\n         */</span>\r\n        <span class=\"hljs-string\">\'Illuminate\\Foundation\\Providers\\ArtisanServiceProvider\'</span>,\r\n        <span class=\"hljs-string\">\'Illuminate\\Auth\\AuthServiceProvider\'</span>,\r\n        <span class=\"hljs-string\">\'Illuminate\\Bus\\BusServiceProvider\'</span>,\r\n        ...\r\n    ]\r\n    \r\n</pre><h3><br></h3><h3><strong>Loading service providers conditionally</strong></h3><p><br></p><p>However, if you want to make it conditional, you\'ll need to head over to&nbsp;<code style=\"color: rgb(85, 85, 85);\">/app/Providers/AppServiceProvider.php</code>.</p><p><br></p><pre class=\"ql-syntax\" spellcheck=\"false\"> <span class=\"hljs-comment\">//AppServiceProvider.php</span>\r\n\r\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">register</span><span class=\"hljs-params\">()</span>\r\n    </span>{\r\n        <span class=\"hljs-keyword\">$this</span>-&gt;app-&gt;bind(\r\n            <span class=\"hljs-string\">\'Illuminate\\Contracts\\Auth\\Registrar\'</span>,\r\n            <span class=\"hljs-string\">\'App\\Services\\Registrar\'</span>\r\n        );\r\n\r\n        <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">$this</span>-&gt;app-&gt;environment(<span class=\"hljs-string\">\'production\'</span>)) {\r\n            <span class=\"hljs-keyword\">$this</span>-&gt;app-&gt;register(<span class=\"hljs-string\">\'App\\Providers\\ProductionErrorHandlerServiceProvider\'</span>);\r\n        } <span class=\"hljs-keyword\">else</span> {\r\n            <span class=\"hljs-keyword\">$this</span>-&gt;app-&gt;register(<span class=\"hljs-string\">\'App\\Providers\\VerboseErrorHandlerServiceProvider\'</span>);\r\n        }\r\n}\r\n\r\n        <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">$this</span>-&gt;app-&gt;environment([<span class=\"hljs-string\">\'local\'</span>, <span class=\"hljs-string\">\'test\'</span>])) {\r\n            <span class=\"hljs-keyword\">$this</span>-&gt;app-&gt;register(DuskServiceProvider::class);\r\n        }\r\n</pre><p><br></p><p><code style=\"color: rgb(85, 85, 85);\">$this-&gt;app-&gt;register()</code>will set up the service provider just like adding it to&nbsp;<code style=\"color: rgb(85, 85, 85);\">config/app.php</code>&nbsp;will, so its&nbsp;<code style=\"color: rgb(85, 85, 85);\">register()</code>&nbsp;and&nbsp;<code style=\"color: rgb(85, 85, 85);\">boot()</code>&nbsp;methods will get called at the appropriate times.</p><p>You could also use&nbsp;<code style=\"color: rgb(85, 85, 85);\">switch</code>&nbsp;instead of&nbsp;<code style=\"color: rgb(85, 85, 85);\">if</code>, or you could do your work based on other environment variables, or whatever else--but this is your current best bet to conditionally load service providers.</p><p><br></p>', '2019-12-01 12:45:00', 'https://images.unsplash.com/photo-1482514194978-3ed8cc9d86c6?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjk2NDE2fQ', 'Photo by <a href=\"https://unsplash.com/@priscilladupreez\" target=\"_blank\">Priscilla Du Preez</a> on <a href=\"https://unsplash.com\" target=\"_blank\">Unsplash</a>', '1', '{\"og_title\": null, \"twitter_title\": null, \"canonical_link\": null, \"og_description\": null, \"meta_description\": null, \"twitter_description\": null}', '2019-12-01 12:55:40', '2019-12-01 16:11:46', NULL, '1'),
('d31bffa9-ef9a-4751-86f9-7deca3bf8706', 'real-time-app-pusher-laravel-echo', 'Build a real-time app with Pusher and Laravel(continuously updating\r\n\r\n)', 'Build a real-time app with Pusher and Laravel Echo, it\'s even easier than socket.io', '<p>Pusher</p><p>Laravel/Echo</p><p>Broadcasting </p><p>Private Channel</p><p>Presece Channel</p>', '2019-12-01 16:01:00', 'https://images.unsplash.com/photo-1556157382-4e063bb26661?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjk2NDE2fQ', 'Photo by <a href=\"https://unsplash.com/@austindistel\" target=\"_blank\">Austin Distel</a> on <a href=\"https://unsplash.com\" target=\"_blank\">Unsplash</a>', '1', '{\"og_title\": null, \"twitter_title\": null, \"canonical_link\": null, \"og_description\": null, \"meta_description\": null, \"twitter_description\": null}', '2019-12-01 16:07:34', '2019-12-01 16:08:02', NULL, '1'),
('eaa80295-08b8-4efd-a789-d5719eb8f523', 'use-shortcut-to-boost-productivity', 'Visual Studio Code is My Favorite editor! keep record some  secret (continuously updating )', 'This is a shortcut list that I hope to remember. It\'ll be helpful only for me 😉. Continuously updating ...', '<p><br></p><h2><strong>Visual Studio Code</strong></h2><p><br></p><p>I like vs code, it\'s light, very configurable, elegent, with tons of pulgins it\'s extremly powerful, I can configrate vs code as anything as I like. </p><p>keep record something in this post about shortcut, setting.json or verything as vscode.</p><p><br></p><h2>Shortcuts</h2><p><span style=\"color: rgb(36, 41, 46);\"><span class=\"ql-cursor\">﻿﻿﻿﻿</span>Open File/Folder From Sidebar</span></p><p><code>⌘+Down</code></p><p><br></p><p><span style=\"color: rgb(36, 41, 46);\">Reopen Files</span></p><p><code>Shift+⌘+T</code></p><p><br></p><p><span style=\"color: rgb(36, 41, 46);\">Insert Line</span></p><p><code>⌘+Enter </code><code class=\"hljs-comment\"># Insert below</code></p><p><code>Ctrl+Enter </code><code class=\"hljs-comment\"># Insert below</code></p><p><br></p><p>Jump To Matching Bracket</p><p><code>Shift+⌘+\\</code></p><p><code>Shift+Ctrl+\\</code></p><p><br></p><p>Go to Entity (Functions, vars, etc)</p><p><code>Cmd+Shift+O</code></p><p><br></p><p>Add Block Comment</p><p><code>Shift+Option+A</code></p><p><code>Shift+Alt+A</code></p><p><br></p><p>Spilt Editor</p><p><code>⌃+⌥+⌘+¥</code></p><p><br></p><h2>setting.json</h2><p><br></p><pre class=\"ql-syntax\" spellcheck=\"false\"><span class=\"hljs-string\">\"search.useIgnoreFiles\"</span>: <span class=\"hljs-literal\">false</span>, \r\n</pre><p><span class=\"hljs-built_in\">enable</span> vscode to search gitignored files like <span class=\"hljs-keyword\">in</span> vendor/ or node_modules/ folder </p><h2>  </h2>', '2019-11-02 10:34:00', 'https://images.unsplash.com/flagged/photo-1551277816-36355be656eb?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjk2NDE2fQ', 'Photo by <a href=\"https://unsplash.com/@saratorda\" target=\"_blank\">Sara Torda</a> on <a href=\"https://unsplash.com\" target=\"_blank\">Unsplash</a>', '1', '{\"og_title\": null, \"twitter_title\": null, \"canonical_link\": null, \"og_description\": null, \"meta_description\": null, \"twitter_description\": null}', '2019-11-02 10:52:51', '2019-12-29 17:36:14', NULL, '1'),
('f29fe8f7-4b55-4430-8f90-91c53a061f9d', 'when-and-how-to-plat-redis-with-laravel', 'When and how to Play Redis with Laravel and plenty of examples', 'Redis is a great key-value database, but when should we need it over than SQL database like MySql. Here it is.', '<h1><strong>Redis</strong></h1><p>First we need to download Redis</p><p>In macOs</p><p><code style=\"color: rgb(85, 85, 85);\">brew install redis</code></p><p>start redis server</p><p><code style=\"color: rgb(85, 85, 85);\">redis-server</code></p><p>start redis cli</p><p><code style=\"color: rgb(85, 85, 85);\">redis-cli</code></p><p>Play Redis with Laravel we need install a package by composer</p><p><code style=\"color: rgb(85, 85, 85);\">composer require predis/predis</code></p><pre class=\"ql-syntax\" spellcheck=\"false\">\'redis\' =&gt; [\r\n\r\n    \'client\' =&gt; env(\'REDIS_CLIENT\', \'predis\'),\r\n...\r\n</pre><p>Use with Laravel Redis Facade.</p><p><code style=\"color: rgb(85, 85, 85);\">Redis::set(\'name\', \'xyyo\');</code></p><p><code style=\"color: rgb(85, 85, 85);\">Redis::get(\'name\');</code></p><p><code style=\"color: rgb(85, 85, 85);\">Redis::incr(\'visits\');</code></p><p>check in redis-cli</p><p><code style=\"color: rgb(85, 85, 85);\">redis-cli</code></p><p><code style=\"color: rgb(85, 85, 85);\"><strong>//GET laravel_database_visits</strong></code></p><p><strong>Every keys set by laravel has a prefix with&nbsp;</strong><code style=\"color: rgb(85, 85, 85);\"><strong>laravel_database_</strong></code><strong>, that you can config it in&nbsp;</strong><code style=\"color: rgb(85, 85, 85);\"><strong>database.php</strong></code></p><h2><strong>simulate downloads time</strong></h2><pre class=\"ql-syntax\" spellcheck=\"false\">Route::get(\'/{id}\', function ($id) {\r\n    $downloads = Redis::get(\"video.{$id}.downloads\");\r\n    return view(\'welcome\')-&gt;with([\'download\'=&gt;$downloads]);\r\n});\r\n\r\n\r\nRoute::get(\'/download/{id}\', function ($id) {\r\n    Redis::incr(\"video.{$id}.downloads\");\r\n    return back();\r\n});\r\n</pre><p>note: double quotes for php is able to extend variable like ` in javascript, in this situation double quote is different with single quote.</p><h2><strong>order posts by views number</strong></h2><p>prefix with&nbsp;<code style=\"color: rgb(85, 85, 85);\">z</code>&nbsp;means a sorted set.</p><pre class=\"ql-syntax\" spellcheck=\"false\">//in detail api increment every view\r\n\r\nRedis::zincrBy(\"trending_posts\", 1, $post-&gt;slug);\r\n\r\n//in redis-cli\r\n\r\nzincrBy trending_posts 1 $slug\r\n\r\n//in list api, fetch ordered posts\r\n\r\nRedis::zrevrange(\'trending_posts\', 0, -1);\r\n\r\n//in redis-cli\r\nzrevrange trending_posts 0 -1\r\n</pre><h2><strong>associative array in redis is hash type</strong></h2><pre class=\"ql-syntax\" spellcheck=\"false\">$user1Stats = [\r\n    \'favorites\' =&gt; 50,\r\n    \'watchLaters\' =&gt; 90,\r\n    \'completions\' =&gt; 25\r\n];\r\n127.0.0.1:6379&gt; hmset user.1.stats favorites 50 watchLaters 90 completions 25\r\nOK\r\n\r\n127.0.0.1:6379&gt; hget user.1.stats favorites\r\n\"50\"\r\n\r\n127.0.0.1:6379&gt; hgetall user.1.stats\r\n1) \"favorites\"\r\n2) \"50\"\r\n3) \"watchLaters\"\r\n4) \"90\"\r\n5) \"completions\"\r\n6) \"25\"\r\n// in laravel\r\n $user2Stats = [\r\n        \'favorites\' =&gt; 50,\r\n        \'watchLaters\' =&gt; 90,\r\n        \'completions\' =&gt; 25\r\n    ];\r\nRedis::hmset(\'user.2.stats\', $user2Stats);\r\nreturn Redis::hgetall(\'user.2.stats\');\r\n</pre><h2><strong>cache posts that don\'t need fetch from database</strong></h2><pre class=\"ql-syntax\" spellcheck=\"false\">return Cache::remember(\'articales.all\', 60*60, function()\r\n {\r\n    return App\\Artical::all();\r\n});\r\n</pre><h2><strong>implement a most recently viewed item</strong></h2><pre class=\"ql-syntax\" spellcheck=\"false\">// in list api\r\nRedis::zrevrange(\'user.1.items, 0, -1);\r\n//check in redis-cli\r\n//zrevrange user.1.items 0 -1 WITHSCORS\r\n//-1 means fetch all. modify to 1 that will fetch only top 2\r\n\r\n// in detail api\r\nRedis::zadd(\'user.1.items\', time(), $item-&gt;id);\r\n</pre><p><br></p>', '2019-11-30 11:22:00', 'https://images.unsplash.com/photo-1513829596324-4bb2800c5efb?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjk2NDE2fQ', 'Photo by <a href=\"https://unsplash.com/@spencerimbrockphoto\" target=\"_blank\">Spencer Imbrock</a> on <a href=\"https://unsplash.com\" target=\"_blank\">Unsplash</a>', '1', '{\"og_title\": null, \"twitter_title\": null, \"canonical_link\": null, \"og_description\": null, \"meta_description\": null, \"twitter_description\": null}', '2019-11-30 11:37:33', '2020-01-11 15:21:59', NULL, '1');

INSERT INTO `canvas_posts_tags` (`post_id`, `tag_id`) VALUES ('0c6397ca-5925-4c2f-bb38-1af935e5532d', '2fe87371-ec3d-4fe4-af25-7e5797853ef0'),
('0c6397ca-5925-4c2f-bb38-1af935e5532d', 'eac3454d-0940-4c17-84bb-bece5fa835c3'),
('19e26887-e7ed-488a-b160-799e88e1691f', 'ad68d65e-d385-4407-bf79-e5f04acafae3'),
('19e26887-e7ed-488a-b160-799e88e1691f', 'b85362cf-c544-455e-ac5d-bf2836342510'),
('19e26887-e7ed-488a-b160-799e88e1691f', 'd31b2b14-aa0a-4c71-9871-1dfef4624e4b'),
('1a374fad-42cc-4bb9-bbfc-e5e3e6189c05', '2e26424c-8c16-4ca2-9d1a-b09290e40825'),
('1a374fad-42cc-4bb9-bbfc-e5e3e6189c05', '3cbb9be1-b4cf-43f3-bd6d-37d414362c18'),
('1a374fad-42cc-4bb9-bbfc-e5e3e6189c05', '58e17575-cce6-44d1-b2db-2f90ec286dc4'),
('23fbc33b-27b6-487e-96e4-c715a109f483', '4da08cf4-ccb6-4839-a693-e8d3df4415b4'),
('23fbc33b-27b6-487e-96e4-c715a109f483', 'e31f1fb4-4848-4a03-93e3-8a615e3a8302'),
('26f81b5e-7631-48f2-b96f-b3ad45d2828f', '1926e3fa-21e9-4e7d-8016-45bbed8f5dea'),
('26f81b5e-7631-48f2-b96f-b3ad45d2828f', 'b6ba304d-52ac-45cb-abe6-a698dab0ee2e'),
('2a55169a-8c41-4ffb-9ea7-7fb681581430', 'a280155d-4799-4aaf-a383-4f557513ce74'),
('2a55169a-8c41-4ffb-9ea7-7fb681581430', 'ad68d65e-d385-4407-bf79-e5f04acafae3'),
('303dfa84-b363-43a7-bb1f-1cc495437d56', '25f6e38e-2193-4d22-a043-ed82b7d4ff60'),
('303dfa84-b363-43a7-bb1f-1cc495437d56', 'ad68d65e-d385-4407-bf79-e5f04acafae3'),
('316b45c5-ca39-41f4-8458-8b40d8c7bee1', '2e26424c-8c16-4ca2-9d1a-b09290e40825'),
('316b45c5-ca39-41f4-8458-8b40d8c7bee1', 'e8fb2aff-e0c6-49a1-98ef-d28d3c2db602'),
('31cc2ab6-18dc-4124-ac42-052e4b47d337', '4da08cf4-ccb6-4839-a693-e8d3df4415b4'),
('31cc2ab6-18dc-4124-ac42-052e4b47d337', '86bb7198-ff39-46b0-818a-fe73d3ae7d35'),
('31cc2ab6-18dc-4124-ac42-052e4b47d337', 'c6863653-e359-4ba9-ac40-2d6b3b19cf04'),
('5dad068f-705b-4262-8259-0f5b37b4747d', '1926e3fa-21e9-4e7d-8016-45bbed8f5dea'),
('5dad068f-705b-4262-8259-0f5b37b4747d', '9a0dc4b6-99f5-4585-9cc4-8bbb285b5c5f'),
('5e8d02b7-7a88-428a-8d9e-f5086df66ee9', '2e26424c-8c16-4ca2-9d1a-b09290e40825'),
('6fa7fb43-e98c-4718-923a-8eb5b56bede3', '25f6e38e-2193-4d22-a043-ed82b7d4ff60'),
('6fa7fb43-e98c-4718-923a-8eb5b56bede3', 'ad68d65e-d385-4407-bf79-e5f04acafae3'),
('70a456c1-5187-46ac-9d4f-40d4c8e1d8a2', '5fa22341-9e70-4cc8-90a6-c9f716867777'),
('70a456c1-5187-46ac-9d4f-40d4c8e1d8a2', 'c7498273-4e25-4b3b-93e5-dfc59fa4cf6c'),
('74d2e0e1-1cf2-47cc-a912-d99308253eab', '037510da-4fca-4649-ae71-521f0869165e'),
('74d2e0e1-1cf2-47cc-a912-d99308253eab', 'ebba7b42-bd0f-4e26-bbc7-cdabcd727706'),
('76ccba69-5bbc-4d81-88aa-668165aae758', '2fe87371-ec3d-4fe4-af25-7e5797853ef0'),
('76ccba69-5bbc-4d81-88aa-668165aae758', 'e845c485-750d-4746-982e-2080469613f8'),
('797d9d50-72f6-4525-8551-08cbfefc2938', '55c157b4-318c-46e6-9958-82ba3f6e882f'),
('797d9d50-72f6-4525-8551-08cbfefc2938', 'ad68d65e-d385-4407-bf79-e5f04acafae3'),
('92454cfe-7d35-426d-a744-57c40dadf93e', '4da08cf4-ccb6-4839-a693-e8d3df4415b4'),
('92454cfe-7d35-426d-a744-57c40dadf93e', '86bb7198-ff39-46b0-818a-fe73d3ae7d35'),
('92454cfe-7d35-426d-a744-57c40dadf93e', 'c6863653-e359-4ba9-ac40-2d6b3b19cf04'),
('9e99fe7e-0894-4979-8221-866c3c7625fd', '24b09b24-64ac-4d4f-ac80-80f7c7d1b85f'),
('9e99fe7e-0894-4979-8221-866c3c7625fd', 'be4c55b7-d979-4108-b650-44b43bfbe97e'),
('a40f0223-ea82-4553-b474-3534eb28b3ea', '194de3cf-22d3-4bd2-bdaa-20f1b7da7941'),
('a40f0223-ea82-4553-b474-3534eb28b3ea', '3cbb9be1-b4cf-43f3-bd6d-37d414362c18'),
('a6d8b7ac-f700-494a-acef-2348e7dd06b9', '194de3cf-22d3-4bd2-bdaa-20f1b7da7941'),
('a6d8b7ac-f700-494a-acef-2348e7dd06b9', '241667f3-1c89-424c-8da4-4a2ee4e203f2'),
('a6d8b7ac-f700-494a-acef-2348e7dd06b9', '2e26424c-8c16-4ca2-9d1a-b09290e40825'),
('b42a78de-9752-48af-ae5a-7ce4e1a76799', '037510da-4fca-4649-ae71-521f0869165e'),
('b42a78de-9752-48af-ae5a-7ce4e1a76799', 'ebba7b42-bd0f-4e26-bbc7-cdabcd727706'),
('b4fa7c31-2a64-44a8-8bac-424f655336da', '1926e3fa-21e9-4e7d-8016-45bbed8f5dea'),
('b4fa7c31-2a64-44a8-8bac-424f655336da', '86bb7198-ff39-46b0-818a-fe73d3ae7d35'),
('b4fa7c31-2a64-44a8-8bac-424f655336da', 'c6863653-e359-4ba9-ac40-2d6b3b19cf04'),
('be5dad41-72c0-4dc7-9744-48a8b3436355', '2fe87371-ec3d-4fe4-af25-7e5797853ef0'),
('be5dad41-72c0-4dc7-9744-48a8b3436355', 'eac3454d-0940-4c17-84bb-bece5fa835c3'),
('beb55236-64a4-4ab4-95f4-9e4efc15a0fa', '037510da-4fca-4649-ae71-521f0869165e'),
('beb55236-64a4-4ab4-95f4-9e4efc15a0fa', '24b09b24-64ac-4d4f-ac80-80f7c7d1b85f'),
('beb55236-64a4-4ab4-95f4-9e4efc15a0fa', 'ebba7b42-bd0f-4e26-bbc7-cdabcd727706'),
('c1f09c2d-ce00-437f-83b3-c68502ba0c02', 'a280155d-4799-4aaf-a383-4f557513ce74'),
('c1f09c2d-ce00-437f-83b3-c68502ba0c02', 'ad68d65e-d385-4407-bf79-e5f04acafae3'),
('c8650163-54f6-4366-a5be-53b314ec7703', '55c157b4-318c-46e6-9958-82ba3f6e882f'),
('c8650163-54f6-4366-a5be-53b314ec7703', 'a2c3a26d-89f3-40bd-bf24-d54b283d2b84'),
('c8650163-54f6-4366-a5be-53b314ec7703', 'ad68d65e-d385-4407-bf79-e5f04acafae3'),
('d31bffa9-ef9a-4751-86f9-7deca3bf8706', '03a49662-c71f-453d-b036-8d357cd62650'),
('d31bffa9-ef9a-4751-86f9-7deca3bf8706', 'ad68d65e-d385-4407-bf79-e5f04acafae3'),
('d31bffa9-ef9a-4751-86f9-7deca3bf8706', 'b537e339-b61c-4664-911f-8b218545e38c'),
('eaa80295-08b8-4efd-a789-d5719eb8f523', '72c823c8-fd11-4ede-a427-6f830de8644d'),
('eaa80295-08b8-4efd-a789-d5719eb8f523', '82546e4a-941c-4a6d-b20f-669661696ff9'),
('eaa80295-08b8-4efd-a789-d5719eb8f523', 'd79de076-0c80-4f05-8513-16f198f842fc'),
('f29fe8f7-4b55-4430-8f90-91c53a061f9d', '7bc4aaa0-5a30-4193-b3c5-2bc3dbc6ff37'),
('f29fe8f7-4b55-4430-8f90-91c53a061f9d', 'a280155d-4799-4aaf-a383-4f557513ce74');

INSERT INTO `canvas_posts_topics` (`post_id`, `topic_id`) VALUES ('0c6397ca-5925-4c2f-bb38-1af935e5532d', '87dfd54a-1c5b-444d-afd4-5d1541d1e2d7'),
('19e26887-e7ed-488a-b160-799e88e1691f', '52159d1e-418e-4701-b029-02b899f5035c'),
('1a374fad-42cc-4bb9-bbfc-e5e3e6189c05', '4a7650ba-9ca4-419b-95de-10651ce5e5cd'),
('23fbc33b-27b6-487e-96e4-c715a109f483', 'f8264953-02bc-4782-a2ff-27427cd85e06'),
('26f81b5e-7631-48f2-b96f-b3ad45d2828f', 'f8264953-02bc-4782-a2ff-27427cd85e06'),
('2a55169a-8c41-4ffb-9ea7-7fb681581430', '52159d1e-418e-4701-b029-02b899f5035c'),
('303dfa84-b363-43a7-bb1f-1cc495437d56', '52159d1e-418e-4701-b029-02b899f5035c'),
('316b45c5-ca39-41f4-8458-8b40d8c7bee1', '26a5b8e6-5bdb-42a4-9b46-181907120d37'),
('31cc2ab6-18dc-4124-ac42-052e4b47d337', '01eb4184-3af6-43e2-a56d-5c930d5eb622'),
('5dad068f-705b-4262-8259-0f5b37b4747d', 'f3d7e8ff-2f90-4475-8d34-531c0fe8b58c'),
('5e8d02b7-7a88-428a-8d9e-f5086df66ee9', '6697f935-854e-40ec-8555-4c7837160b0a'),
('6fa7fb43-e98c-4718-923a-8eb5b56bede3', '52159d1e-418e-4701-b029-02b899f5035c'),
('70a456c1-5187-46ac-9d4f-40d4c8e1d8a2', 'd409cb61-3596-4d48-b393-57fe3248882f'),
('74d2e0e1-1cf2-47cc-a912-d99308253eab', '4d00a64f-be08-4c95-b2e1-ec154c7d1c06'),
('76ccba69-5bbc-4d81-88aa-668165aae758', 'd93b489b-d3d9-4c45-917a-f974cfb18579'),
('797d9d50-72f6-4525-8551-08cbfefc2938', '52159d1e-418e-4701-b029-02b899f5035c'),
('9e99fe7e-0894-4979-8221-866c3c7625fd', 'd93b489b-d3d9-4c45-917a-f974cfb18579'),
('a40f0223-ea82-4553-b474-3534eb28b3ea', 'a301476f-8efb-4f0b-bab5-27eb98722f99'),
('a6d8b7ac-f700-494a-acef-2348e7dd06b9', '26a5b8e6-5bdb-42a4-9b46-181907120d37'),
('b42a78de-9752-48af-ae5a-7ce4e1a76799', '4d00a64f-be08-4c95-b2e1-ec154c7d1c06'),
('b4fa7c31-2a64-44a8-8bac-424f655336da', 'f3d7e8ff-2f90-4475-8d34-531c0fe8b58c'),
('b7fbf10f-3919-446a-836a-d3d372e9cc23', 'd409cb61-3596-4d48-b393-57fe3248882f'),
('be5dad41-72c0-4dc7-9744-48a8b3436355', '87dfd54a-1c5b-444d-afd4-5d1541d1e2d7'),
('beb55236-64a4-4ab4-95f4-9e4efc15a0fa', '4d00a64f-be08-4c95-b2e1-ec154c7d1c06'),
('c1f09c2d-ce00-437f-83b3-c68502ba0c02', '52159d1e-418e-4701-b029-02b899f5035c'),
('c8650163-54f6-4366-a5be-53b314ec7703', '52159d1e-418e-4701-b029-02b899f5035c'),
('d31bffa9-ef9a-4751-86f9-7deca3bf8706', '52159d1e-418e-4701-b029-02b899f5035c'),
('eaa80295-08b8-4efd-a789-d5719eb8f523', 'd409cb61-3596-4d48-b393-57fe3248882f'),
('f29fe8f7-4b55-4430-8f90-91c53a061f9d', 'c9ada55e-1163-456d-ae7b-3477b28dd96f');

INSERT INTO `canvas_tags` (`id`, `slug`, `name`, `created_at`, `updated_at`, `deleted_at`) VALUES ('037510da-4fca-4649-ae71-521f0869165e', 'Git', 'Git', '2019-10-24 12:21:50', '2019-10-24 12:21:50', NULL),
('03a49662-c71f-453d-b036-8d357cd62650', 'real-time', 'Real-time', '2019-12-01 16:07:34', '2019-12-01 16:07:34', NULL),
('1926e3fa-21e9-4e7d-8016-45bbed8f5dea', 'vue', 'Vue', '2019-12-15 23:26:46', '2019-12-15 23:26:46', NULL),
('24b09b24-64ac-4d4f-ac80-80f7c7d1b85f', 'Devops', 'DevOps', '2019-10-22 07:33:48', '2019-10-22 07:33:48', NULL),
('25f6e38e-2193-4d22-a043-ed82b7d4ff60', 'facade', 'Facade', '2019-12-29 22:21:14', '2019-12-29 22:21:14', NULL),
('2fe87371-ec3d-4fe4-af25-7e5797853ef0', 'Linux', 'Linux', '2019-10-16 03:03:15', '2019-10-16 03:03:15', NULL),
('4da08cf4-ccb6-4839-a693-e8d3df4415b4', 'Javascript', 'Javascript', '2019-11-03 17:45:28', '2019-11-03 17:45:28', NULL),
('55c157b4-318c-46e6-9958-82ba3f6e882f', 'test', 'Test', '2019-12-01 12:55:40', '2019-12-01 12:55:40', NULL),
('5fa22341-9e70-4cc8-90a6-c9f716867777', 'operating-system', 'Operating System', '2019-12-01 16:24:07', '2019-12-01 16:24:07', NULL),
('72c823c8-fd11-4ede-a427-6f830de8644d', 'VsCode', 'VsCode', '2019-11-02 10:52:51', '2019-11-02 10:52:51', NULL),
('7bc4aaa0-5a30-4193-b3c5-2bc3dbc6ff37', 'redis', 'Redis', '2019-12-01 14:11:22', '2019-12-01 14:11:22', NULL),
('82546e4a-941c-4a6d-b20f-669661696ff9', 'Editor', 'Editor', '2019-11-02 10:52:51', '2019-11-02 10:52:51', NULL),
('86bb7198-ff39-46b0-818a-fe73d3ae7d35', 'Node.js', 'Node.js', '2019-11-11 23:25:16', '2019-11-11 23:25:16', NULL),
('9a0dc4b6-99f5-4585-9cc4-8bbb285b5c5f', 'note', 'note', '2019-12-15 23:35:17', '2019-12-15 23:35:17', NULL),
('a280155d-4799-4aaf-a383-4f557513ce74', 'database', 'Database', '2019-12-01 14:11:22', '2019-12-01 14:11:22', NULL),
('a2c3a26d-89f3-40bd-bf24-d54b283d2b84', 'environment', 'Environment', '2019-12-01 12:55:40', '2019-12-01 12:55:40', NULL),
('ad68d65e-d385-4407-bf79-e5f04acafae3', 'Laravel', 'Laravel', '2019-11-11 13:50:56', '2019-11-11 13:50:56', NULL),
('b537e339-b61c-4664-911f-8b218545e38c', 'pusher', 'Pusher', '2019-12-01 16:07:34', '2019-12-01 16:07:34', NULL),
('b6ba304d-52ac-45cb-abe6-a698dab0ee2e', 'css', 'Css', '2019-12-15 23:26:46', '2019-12-15 23:26:46', NULL),
('b85362cf-c544-455e-ac5d-bf2836342510', 'Fake-Data', 'Fake Data', '2019-11-11 13:50:56', '2019-11-11 13:50:56', NULL),
('be4c55b7-d979-4108-b650-44b43bfbe97e', 'Docker', 'Docker', '2019-10-22 07:33:48', '2019-10-22 07:33:48', NULL),
('c6863653-e359-4ba9-ac40-2d6b3b19cf04', 'Npm', 'Npm', '2019-11-11 23:25:16', '2019-11-11 23:25:16', NULL),
('c7498273-4e25-4b3b-93e5-dfc59fa4cf6c', 'macos', 'MacOS', '2019-12-01 16:24:07', '2019-12-01 16:24:07', NULL),
('d31b2b14-aa0a-4c71-9871-1dfef4624e4b', 'Data', 'Data', '2019-11-11 13:50:56', '2019-11-11 13:50:56', NULL),
('d79de076-0c80-4f05-8513-16f198f842fc', 'Shortcut', 'Shortcut', '2019-11-02 10:52:51', '2019-11-02 10:52:51', NULL),
('e31f1fb4-4848-4a03-93e3-8a615e3a8302', 'Api', 'Api', '2019-11-03 17:45:28', '2019-11-03 17:45:28', NULL),
('e845c485-750d-4746-982e-2080469613f8', 'SSL', 'SSL', '2019-10-16 03:03:15', '2019-10-16 03:03:15', NULL),
('eac3454d-0940-4c17-84bb-bece5fa835c3', 'cli', 'CLI', '2020-02-02 23:15:59', '2020-02-02 23:15:59', NULL),
('ebba7b42-bd0f-4e26-bbc7-cdabcd727706', 'Github', 'Github', '2019-10-24 12:21:50', '2019-10-24 12:21:50', NULL);

INSERT INTO `canvas_topics` (`id`, `slug`, `name`, `created_at`, `updated_at`, `deleted_at`) VALUES ('01eb4184-3af6-43e2-a56d-5c930d5eb622', 'JavaScript', 'JavaScript', '2019-11-14 09:46:29', '2019-11-14 09:46:29', NULL),
('4d00a64f-be08-4c95-b2e1-ec154c7d1c06', 'Git', 'Git', '2019-10-24 12:21:50', '2019-10-24 12:21:50', NULL),
('52159d1e-418e-4701-b029-02b899f5035c', 'Laravel', 'Laravel', '2019-11-11 13:50:56', '2019-11-11 13:50:56', NULL),
('87dfd54a-1c5b-444d-afd4-5d1541d1e2d7', 'linux', 'Linux', '2020-02-02 23:16:00', '2020-02-02 23:16:00', NULL),
('c9ada55e-1163-456d-ae7b-3477b28dd96f', 'Database', 'Database', '2019-12-01 14:11:22', '2019-12-01 14:11:22', NULL),
('d409cb61-3596-4d48-b393-57fe3248882f', 'Productivity', 'Productivity', '2019-11-02 10:52:51', '2019-11-02 10:52:51', NULL),
('d93b489b-d3d9-4c45-917a-f974cfb18579', 'Server', 'Server', '2019-10-16 03:03:15', '2019-10-16 03:03:15', NULL),
('f3d7e8ff-2f90-4475-8d34-531c0fe8b58c', 'vuejs', 'Vue.js', '2019-12-15 23:35:17', '2019-12-15 23:35:17', NULL),
('f8264953-02bc-4782-a2ff-27427cd85e06', 'Forntend', 'Forntend', '2019-11-03 17:45:28', '2019-11-03 17:45:28', NULL);

INSERT INTO `canvas_views` (`id`, `post_id`, `ip`, `agent`, `referer`, `created_at`, `updated_at`) VALUES ('1', '1a374fad-42cc-4bb9-bbfc-e5e3e6189c05', '219.119.136.35', 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36', 'https://www.xyyolab.com/blog', '2019-10-15 07:28:25', '2019-10-15 07:28:25'),
('2', '1a374fad-42cc-4bb9-bbfc-e5e3e6189c05', '219.119.136.35', 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36', 'https://www.xyyolab.com/blog', '2019-10-15 07:28:25', '2019-10-15 07:28:25'),
('3', 'c8650163-54f6-4366-a5be-53b314ec7703', '126.159.236.208', 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36', 'https://www.xyyolab.com/blog/topic/Laravel', '2019-12-01 13:52:35', '2019-12-01 13:52:35'),
('4', '2a55169a-8c41-4ffb-9ea7-7fb681581430', NULL, NULL, NULL, '2020-01-11 15:20:06', '2020-01-11 15:20:06'),
('5', 'f29fe8f7-4b55-4430-8f90-91c53a061f9d', NULL, NULL, NULL, '2020-01-11 15:22:14', '2020-01-11 15:22:14'),
('6', 'b4fa7c31-2a64-44a8-8bac-424f655336da', NULL, NULL, NULL, '2020-01-12 17:31:35', '2020-01-12 17:31:35'),
('7', 'f29fe8f7-4b55-4430-8f90-91c53a061f9d', NULL, NULL, NULL, '2020-01-17 23:13:37', '2020-01-17 23:13:37'),
('8', 'b4fa7c31-2a64-44a8-8bac-424f655336da', NULL, NULL, NULL, '2020-02-02 08:54:51', '2020-02-02 08:54:51'),
('9', 'b42a78de-9752-48af-ae5a-7ce4e1a76799', NULL, NULL, NULL, '2020-02-02 08:57:12', '2020-02-02 08:57:12'),
('10', '797d9d50-72f6-4525-8551-08cbfefc2938', NULL, NULL, NULL, '2020-02-02 08:57:25', '2020-02-02 08:57:25'),
('11', 'beb55236-64a4-4ab4-95f4-9e4efc15a0fa', NULL, NULL, NULL, '2020-02-02 08:57:27', '2020-02-02 08:57:27'),
('12', 'f29fe8f7-4b55-4430-8f90-91c53a061f9d', NULL, NULL, NULL, '2020-02-02 22:38:52', '2020-02-02 22:38:52'),
('13', 'be5dad41-72c0-4dc7-9744-48a8b3436355', NULL, NULL, NULL, '2020-02-02 23:18:53', '2020-02-02 23:18:53'),
('14', 'be5dad41-72c0-4dc7-9744-48a8b3436355', NULL, NULL, NULL, '2020-02-02 23:18:59', '2020-02-02 23:18:59'),
('15', 'be5dad41-72c0-4dc7-9744-48a8b3436355', NULL, NULL, NULL, '2020-02-02 23:19:00', '2020-02-02 23:19:00'),
('16', 'beb55236-64a4-4ab4-95f4-9e4efc15a0fa', NULL, NULL, NULL, '2020-02-02 23:35:07', '2020-02-02 23:35:07'),
('17', 'd31bffa9-ef9a-4751-86f9-7deca3bf8706', NULL, NULL, NULL, '2020-02-03 01:50:32', '2020-02-03 01:50:32'),
('18', '70a456c1-5187-46ac-9d4f-40d4c8e1d8a2', NULL, NULL, NULL, '2020-02-03 01:50:44', '2020-02-03 01:50:44'),
('19', '5dad068f-705b-4262-8259-0f5b37b4747d', NULL, NULL, NULL, '2020-02-03 01:51:15', '2020-02-03 01:51:15'),
('20', 'eaa80295-08b8-4efd-a789-d5719eb8f523', NULL, NULL, NULL, '2020-02-03 01:51:25', '2020-02-03 01:51:25'),
('21', 'f29fe8f7-4b55-4430-8f90-91c53a061f9d', NULL, NULL, NULL, '2020-02-03 01:51:32', '2020-02-03 01:51:32'),
('22', '74d2e0e1-1cf2-47cc-a912-d99308253eab', NULL, NULL, NULL, '2020-02-03 01:51:42', '2020-02-03 01:51:42'),
('23', '92454cfe-7d35-426d-a744-57c40dadf93e', NULL, NULL, NULL, '2020-02-03 01:51:51', '2020-02-03 01:51:51'),
('24', '6fa7fb43-e98c-4718-923a-8eb5b56bede3', NULL, NULL, NULL, '2020-02-03 01:52:32', '2020-02-03 01:52:32'),
('25', 'c1f09c2d-ce00-437f-83b3-c68502ba0c02', NULL, NULL, NULL, '2020-02-03 01:52:55', '2020-02-03 01:52:55'),
('26', '9e99fe7e-0894-4979-8221-866c3c7625fd', NULL, NULL, NULL, '2020-02-03 01:52:57', '2020-02-03 01:52:57'),
('27', 'c8650163-54f6-4366-a5be-53b314ec7703', NULL, NULL, NULL, '2020-02-03 01:53:02', '2020-02-03 01:53:02'),
('28', '26f81b5e-7631-48f2-b96f-b3ad45d2828f', NULL, NULL, NULL, '2020-02-03 01:53:20', '2020-02-03 01:53:20'),
('29', '19e26887-e7ed-488a-b160-799e88e1691f', NULL, NULL, NULL, '2020-02-03 01:55:46', '2020-02-03 01:55:46'),
('30', '303dfa84-b363-43a7-bb1f-1cc495437d56', NULL, NULL, NULL, '2020-02-03 01:58:32', '2020-02-03 01:58:32'),
('31', '76ccba69-5bbc-4d81-88aa-668165aae758', NULL, NULL, NULL, '2020-02-03 01:59:54', '2020-02-03 01:59:54'),
('32', '2a55169a-8c41-4ffb-9ea7-7fb681581430', NULL, NULL, NULL, '2020-02-03 02:02:19', '2020-02-03 02:02:19'),
('33', '70a456c1-5187-46ac-9d4f-40d4c8e1d8a2', NULL, NULL, NULL, '2020-02-14 21:07:21', '2020-02-14 21:07:21'),
('34', '76ccba69-5bbc-4d81-88aa-668165aae758', NULL, NULL, NULL, '2020-02-21 00:47:17', '2020-02-21 00:47:17'),
('35', 'beb55236-64a4-4ab4-95f4-9e4efc15a0fa', NULL, NULL, NULL, '2020-02-25 18:19:02', '2020-02-25 18:19:02'),
('36', '70a456c1-5187-46ac-9d4f-40d4c8e1d8a2', NULL, NULL, NULL, '2020-02-26 22:51:14', '2020-02-26 22:51:14'),
('37', '70a456c1-5187-46ac-9d4f-40d4c8e1d8a2', NULL, NULL, NULL, '2020-03-02 09:59:45', '2020-03-02 09:59:45'),
('38', '74d2e0e1-1cf2-47cc-a912-d99308253eab', NULL, NULL, NULL, '2020-03-02 17:49:22', '2020-03-02 17:49:22'),
('39', 'eaa80295-08b8-4efd-a789-d5719eb8f523', NULL, NULL, NULL, '2020-03-14 10:28:25', '2020-03-14 10:28:25'),
('40', 'b42a78de-9752-48af-ae5a-7ce4e1a76799', NULL, NULL, NULL, '2020-03-14 23:41:18', '2020-03-14 23:41:18'),
('41', 'd31bffa9-ef9a-4751-86f9-7deca3bf8706', NULL, NULL, NULL, '2020-03-15 10:40:19', '2020-03-15 10:40:19'),
('42', '2a55169a-8c41-4ffb-9ea7-7fb681581430', NULL, NULL, NULL, '2020-03-15 22:26:06', '2020-03-15 22:26:06'),
('43', '26f81b5e-7631-48f2-b96f-b3ad45d2828f', NULL, NULL, NULL, '2020-03-17 15:38:21', '2020-03-17 15:38:21'),
('44', '6fa7fb43-e98c-4718-923a-8eb5b56bede3', NULL, NULL, NULL, '2020-03-21 09:31:40', '2020-03-21 09:31:40'),
('45', '303dfa84-b363-43a7-bb1f-1cc495437d56', NULL, NULL, NULL, '2020-03-21 09:45:29', '2020-03-21 09:45:29'),
('46', 'c1f09c2d-ce00-437f-83b3-c68502ba0c02', NULL, NULL, NULL, '2020-03-21 09:58:26', '2020-03-21 09:58:26'),
('47', '2a55169a-8c41-4ffb-9ea7-7fb681581430', NULL, NULL, NULL, '2020-03-21 10:04:04', '2020-03-21 10:04:04'),
('48', '19e26887-e7ed-488a-b160-799e88e1691f', NULL, NULL, NULL, '2020-03-21 10:08:36', '2020-03-21 10:08:36'),
('49', 'd31bffa9-ef9a-4751-86f9-7deca3bf8706', NULL, NULL, NULL, '2020-03-21 10:14:22', '2020-03-21 10:14:22'),
('50', 'c8650163-54f6-4366-a5be-53b314ec7703', NULL, NULL, NULL, '2020-03-21 10:14:32', '2020-03-21 10:14:32'),
('51', '797d9d50-72f6-4525-8551-08cbfefc2938', NULL, NULL, NULL, '2020-03-21 10:14:56', '2020-03-21 10:14:56'),
('52', 'f29fe8f7-4b55-4430-8f90-91c53a061f9d', NULL, NULL, NULL, '2020-03-21 10:15:04', '2020-03-21 10:15:04'),
('53', '5dad068f-705b-4262-8259-0f5b37b4747d', NULL, NULL, NULL, '2020-03-21 10:15:26', '2020-03-21 10:15:26'),
('54', 'b42a78de-9752-48af-ae5a-7ce4e1a76799', NULL, NULL, NULL, '2020-03-21 10:16:25', '2020-03-21 10:16:25'),
('55', '74d2e0e1-1cf2-47cc-a912-d99308253eab', NULL, NULL, NULL, '2020-03-21 10:16:36', '2020-03-21 10:16:36'),
('56', 'beb55236-64a4-4ab4-95f4-9e4efc15a0fa', NULL, NULL, NULL, '2020-03-21 10:16:59', '2020-03-21 10:16:59'),
('57', '74d2e0e1-1cf2-47cc-a912-d99308253eab', NULL, NULL, NULL, '2020-03-21 10:25:22', '2020-03-21 10:25:22'),
('58', 'b42a78de-9752-48af-ae5a-7ce4e1a76799', NULL, NULL, NULL, '2020-03-21 10:30:35', '2020-03-21 10:30:35');

INSERT INTO `messages` (`id`, `name`, `email`, `message`, `deleted_at`, `created_at`, `updated_at`) VALUES ('1', '上がる', 'Ddh@gmail.com', 'Xsav', NULL, '2019-10-14 09:30:55', '2019-10-14 09:30:55'),
('2', 'saosao', '341451903@qq.com', 'giaogiao？？\r\nsaosao？？\r\nhahaha', NULL, '2019-10-15 04:19:00', '2019-10-15 04:19:00'),
('3', 'user name', 'keidarcy.1015@gmail.com', 'try a mail', NULL, '2019-10-19 14:23:26', '2019-10-19 14:23:26'),
('4', 'fake person', 'keidarcy.1015@gmail.com', 'test message', NULL, '2019-10-20 10:11:01', '2019-10-20 10:11:01'),
('5', 'dj8', '341451903@qq.com', 'cnm nmsl dbz', NULL, '2019-11-04 13:30:31', '2019-11-04 13:30:31'),
('6', 'dj8', '341451903@qq.com', 'fxxk you，cnm,hhhhhhhhhhhhhhhh, :)', NULL, '2019-11-15 17:36:43', '2019-11-15 17:36:43'),
('7', 'bigkk', '341451903@qq.com', 'wdnmdgb,诶嘿嘿。', NULL, '2019-12-17 13:44:32', '2019-12-17 13:44:32');

INSERT INTO `migrations` (`id`, `migration`, `batch`) VALUES ('1', '2014_10_12_000000_create_users_table', '1'),
('2', '2014_10_12_100000_create_password_resets_table', '1'),
('3', '2019_08_19_000000_create_failed_jobs_table', '1'),
('4', '2018_10_12_000000_create_canvas_tables', '2'),
('5', '2019_02_16_000000_create_canvas_topics_tables', '2'),
('6', '2019_03_05_000000_add_indexes_to_canvas_views', '2'),
('7', '2019_10_13_043722_create_messages_table', '3'),
('8', '2019_10_13_134450_create_phrases_table', '3'),
('9', '2019_10_19_051035_add_complete_flg_to_posts', '4'),
('10', '2020_01_11_104505_rename_basic_table', '5');

INSERT INTO `users` (`id`, `name`, `email`, `email_verified_at`, `password`, `remember_token`, `created_at`, `updated_at`) VALUES ('1', 'xyyo', 'keidarcy.1015@gmail.com', NULL, '$2y$10$3tGbZaQ1u0/9qjLDvwbHK.vGhT4rvGCnYDN.Ax/nlXiyt9Q1PvK1e', 'jM7INivc1GlVfW7CyTDIbaO0Y01LdkBtY3aAVjfL2jAk5ZEWVhPWNVMY7Cqu', '2019-10-13 03:06:25', '2019-10-13 03:06:25');




/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;